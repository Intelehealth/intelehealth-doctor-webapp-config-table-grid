{"version":3,"file":"ih-library.mjs","sources":["../../../projects/ih-library/src/lib/ih-library.service.ts","../../../projects/ih-library/src/lib/services/appointment.service.ts","../../../projects/ih-library/src/lib/services/visit.service.ts","../../../projects/ih-library/src/lib/modal-components/reschedule-appointment-confirm/reschedule-appointment-confirm.component.ts","../../../projects/ih-library/src/lib/modal-components/reschedule-appointment-confirm/reschedule-appointment-confirm.component.html","../../../projects/ih-library/src/lib/config/constant.ts","../../../projects/ih-library/src/lib/utils/utility-functions.ts","../../../projects/ih-library/src/lib/modal-components/cancel-appointment-confirm/cancel-appointment-confirm.component.ts","../../../projects/ih-library/src/lib/modal-components/cancel-appointment-confirm/cancel-appointment-confirm.component.html","../../../projects/ih-library/src/lib/modal-components/reschedule-appointment/reschedule-appointment.component.ts","../../../projects/ih-library/src/lib/modal-components/reschedule-appointment/reschedule-appointment.component.html","../../../projects/ih-library/src/lib/services/core.service.ts","../../../projects/ih-library/src/lib/services/mindmap.service.ts","../../../projects/ih-library/src/lib/services/app-config.service.ts","../../../projects/ih-library/src/lib/core/directives/default-image.directive.ts","../../../projects/ih-library/src/lib/components/table-grid/table-grid.component.ts","../../../projects/ih-library/src/lib/components/table-grid/table-grid.component.html","../../../projects/ih-library/src/lib/ih-library.component.ts","../../../projects/ih-library/src/lib/ih-library.component.html","../../../projects/ih-library/src/lib/modal-components/modal-components.module.ts","../../../projects/ih-library/src/lib/ih-library.module.ts","../../../projects/ih-library/src/public-api.ts","../../../projects/ih-library/src/ih-library.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IhLibraryService {\r\n\r\n  constructor() { }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ScheduleModel } from \"../model/model\";\r\nimport { AppointmentModel } from \"../model/model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AppointmentService {\r\n  private mindmapURL;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('environment') environment\r\n  ) {\r\n    this.mindmapURL = environment.mindmapURL;\r\n  }\r\n\r\n  /**\r\n  * Create or update appointment\r\n  * @param {any} payload - Payload for create or update appointment\r\n  * @return {Observable<any>}\r\n  */\r\n  updateOrCreateAppointment(payload: ScheduleModel): Observable<any> {\r\n    return this.http.post(\r\n      `${this.mindmapURL}/appointment/createOrUpdateSchedule`,\r\n      payload\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Update daysOffs\r\n  * @param {any} payload - Payload for update daysOff's\r\n  * @return {Observable<any>}\r\n  */\r\n  updateDaysOff(payload: { userUuid: any; daysOff: any[] | string[]; month: string; year: any; }): Observable<any> {\r\n    return this.http.post(\r\n      `${this.mindmapURL}/appointment/updateDaysOff`,\r\n      payload\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Get user appointments\r\n  * @param {string} userUuid - User uuid\r\n  * @param {string} year - Year\r\n  * @param {string} month - Month\r\n  * @return {Observable<any>}\r\n  */\r\n  getUserAppoitment(userUuid: string, year: string, month: string): Observable<any> {\r\n    return this.http.get(\r\n      `${this.mindmapURL}/appointment/getSchedule/${userUuid}?year=${year}&month=${month}`\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Get user slots\r\n  * @param {string} userUuid - User uuid\r\n  * @param {string} fromDate - From date\r\n  * @param {string} toDate - To date\r\n  * @return {Observable<any>}\r\n  */\r\n  getUserSlots(userUuid: string, fromDate: string, toDate: string, speciality = null, pending_visits = null): Observable<any> {\r\n    let url = `${this.mindmapURL}/appointment/getUserSlots/${userUuid}?fromDate=${fromDate}&toDate=${toDate}`\r\n  \r\n    if(speciality) {\r\n      url += `&speciality=${speciality}`;\r\n    }\r\n    if(pending_visits != null) {\r\n      url += `&pending_visits=`+pending_visits;\r\n    }\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Get user appointment slots\r\n  * @param {string} fromDate - From date\r\n  * @param {string} toDate - To date\r\n  * @param {string} speciality - Speciality\r\n  * @return {Observable<any>}\r\n  */\r\n  getAppointmentSlots(fromDate: string, toDate: string, speciality: any): Observable<any> {\r\n    return this.http.get(\r\n      `${this.mindmapURL}/appointment/getAppointmentSlots?fromDate=${fromDate}&toDate=${toDate}&speciality=${speciality}`\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Get appointment for a visit\r\n  * @param {string} visitId - Visit uuid\r\n  * @return {Observable<any>}\r\n  */\r\n  getAppointment(visitId: string): Observable<any> {\r\n    return this.http.get(\r\n      `${this.mindmapURL}/appointment/getAppointment/${visitId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Get scheduled months\r\n  * @param {string} userUuid - User uuid\r\n  * @param {string} year - Year\r\n  * @param {string} speciality - Speciality\r\n  * @return {Observable<any>}\r\n  */\r\n  getScheduledMonths(userUuid: any, year: string, speciality: string = null): Observable<any> {\r\n    let url = `${this.mindmapURL}/appointment/getScheduledMonths/${userUuid}?year=${year}`;\r\n    if(speciality) {\r\n      url += `&speciality=${speciality}`;\r\n    }\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Get followup visits\r\n  * @param {string} providerId - Provider uuid\r\n  * @return {Observable<any>}\r\n  */\r\n  getFollowUpVisit(providerId: string): Observable<any> {\r\n    return this.http.get(\r\n      `${this.mindmapURL}/openmrs/getFollowUpVisit/${providerId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Reschedule appointment\r\n  * @param {string} payload - Payload to reschedule appointment\r\n  * @return {Observable<any>}\r\n  */\r\n  rescheduleAppointment(payload: AppointmentModel): Observable<any> {\r\n    return this.http.post(\r\n      `${this.mindmapURL}/appointment/rescheduleAppointment`,\r\n      payload\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Cancel appointment\r\n  * @param {string} payload - Payload to cancel appointment\r\n  * @return {Observable<any>}\r\n  */\r\n  cancelAppointment(payload: { id: any; visitUuid: any; hwUUID: any; }): Observable<any> {\r\n    return this.http.post(\r\n      `${this.mindmapURL}/appointment/cancelAppointment`,\r\n      payload\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Complete appointment\r\n  * @param {string} payload - Payload to complete appointment\r\n  * @return {Observable<any>}\r\n  */\r\n  completeAppointment(payload: { visitUuid: string; }): Observable<any> {\r\n    return this.http.post(\r\n      `${this.mindmapURL}/appointment/completeAppointment`,\r\n      payload\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Check appointment present or not\r\n  * @param {string} userUuid - User uuid\r\n  * @param {string} fromDate - From date\r\n  * @param {string} toDate - To date\r\n  * @param {string} speciality - Speciality\r\n  * @return {Observable<any>}\r\n  */\r\n  checkAppointmentPresent(userUuid: string, fromDate: string, toDate: string, speciality: string): Observable<any> {\r\n    return this.http.get(\r\n      `${this.mindmapURL}/appointment/checkAppointment/${userUuid}?fromDate=${fromDate}&toDate=${toDate}&speciality=${speciality}`\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Update speciality for the calendar slots\r\n  * @param {string} userUuid - User uuid\r\n  * @param {string} speciality - Speciality\r\n  * @return {Observable<any>}\r\n  */\r\n  updateSlotSpeciality(userUuid: string, speciality: string): Observable<any> {\r\n    return this.http.put(\r\n      `${this.mindmapURL}/appointment/updateSlotSpeciality/${userUuid}?speciality=${speciality}`,\r\n      null\r\n    );\r\n  }\r\n}\r\n","import { Inject, Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, Subject } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class VisitService {\r\n  public isVisitSummaryShow: boolean = false;\r\n  public isHelpButtonShow: boolean = false;\r\n  public triggerAction: Subject<any> = new Subject();\r\n  public chatVisitId: string;\r\n\r\n  private baseURL;\r\n  private mindmapURL;\r\n  private baseURLAbha;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('environment') environment\r\n  ) {\r\n    this.baseURL = environment.baseURL;\r\n    this.mindmapURL = environment.mindmapURL;\r\n    this.baseURLAbha = environment.baseURLAbha;\r\n  }\r\n\r\n  /**\r\n  * Get visit\r\n  * @param {string} uuid - Visit uuid\r\n  * @return {Observable<any>}\r\n  */\r\n  getVisit(uuid): Observable<any> {\r\n    // tslint:disable-next-line:max-line-length\r\n    const url = `${this.baseURL}/visit/${uuid}?includeInactive=false&v=custom:(uuid,patient:(uuid,identifiers:(identifier,identifierType:(name,uuid,display)),person:(display,gender,age,birthdate)),location:(display),encounters:(display,encounterDatetime,voided,encounterType:(display),encounterProviders),attributes)`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Get visits for a patient\r\n  * @param {string} id - Patient uuid\r\n  * @return {Observable<any>}\r\n  */\r\n  recentVisits(id): Observable<any> {\r\n    const url = `${this.baseURL}/visit?patient=${id}&v=full`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Get visit\r\n  * @param {string} uuid - Visit uuid\r\n  * @param {string} v - response version format\r\n  * @return {Observable<any>}\r\n  */\r\n  fetchVisitDetails(\r\n    \r\n    uuid,\r\n    v = \"custom:(location:(display),uuid,display,startDatetime,dateCreated,stopDatetime,encounters:(display,uuid,encounterDatetime,encounterType:(display),obs:(display,uuid,value,concept:(uuid,display)),encounterProviders:(display,provider:(uuid,attributes,person:(uuid,display,gender,age)))),patient:(uuid,identifiers:(identifier,identifierType:(name,uuid,display)),attributes,person:(display,gender,age)),attributes)\"\r\n  ): Observable<any> {\r\n    // tslint:disable-next-line:max-line-length\r\n    const url = `${this.baseURL}/visit/${uuid}?v=${v}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Get visit\r\n  * @param {string} uuid - Visit uuid\r\n  * @param {string} v - response version format\r\n  * @return {Observable<any>}\r\n  */\r\n  fetchVisitDetails2(\r\n    externalPrescriptionCred: string,\r\n    \r\n    uuid: string,\r\n    v: string = \"custom:(location:(display),uuid,display,startDatetime,dateCreated,stopDatetime,encounters:(display,uuid,encounterDatetime,encounterType:(display),obs:(display,uuid,value,concept:(uuid,display)),encounterProviders:(display,provider:(uuid,attributes,person:(uuid,display,gender,age)))),patient:(uuid,identifiers:(identifier,identifierType:(name,uuid,display)),attributes,person:(display,gender,age)),attributes)\"\r\n  ): Observable<any> {\r\n    // tslint:disable-next-line:max-line-length\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Authorization', 'Basic ' + externalPrescriptionCred);\r\n    const url = `${this.baseURL}/visit/${uuid}?v=${v}`;\r\n    return this.http.get(url, { headers });\r\n  }\r\n\r\n  /**\r\n  * Get visit\r\n  * @param {string} uuid - Visit uuid\r\n  * @param {string} v - response format\r\n  * @return {Observable<any>}\r\n  */\r\n  fetchVisitPatient(externalPrescriptionCred: string, uuid: string, v: string = \"custom:(uuid,patient:(attributes,identifiers:(identifier,identifierType:(name,uuid,display))))\"): Observable<any> {\r\n    let headers: HttpHeaders = new HttpHeaders();\r\n    headers = headers.append('Authorization', 'Basic ' + externalPrescriptionCred);\r\n    const url = `${this.baseURL}/visit/${uuid}?v=${v}`;\r\n    return this.http.get(url, { headers });\r\n  }\r\n\r\n  /**\r\n  * Get visit\r\n  * @param {string} uuid - Visit uuid\r\n  * @param {string} v - response version format\r\n  * @return {Observable<any>}\r\n  */\r\n  getVisitDetails(\r\n    \r\n    uuid: string,\r\n    v: string = \"custom:(location:(display),uuid,display,startDatetime,stopDatetime,encounters:(display,uuid,encounterDatetime,encounterType:(display),obs:(display,uuid,value),encounterProviders:(display,provider:(uuid,person:(uuid,display,gender,age),attributes))),patient:(uuid,identifiers:(identifier,identifierType:(name,uuid,display)),person:(display,gender,age)))\"\r\n  ): Observable<any> {\r\n    // tslint:disable-next-line:max-line-length\r\n    const url = `${this.baseURL}/visit/${uuid}?v=${v}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Get visit attributes\r\n  * @param {string} visitId - Visit uuid\r\n  * @return {Observable<any>}\r\n  */\r\n  getAttribute(visitId): Observable<any> {\r\n    const url = `${this.baseURL}/visit/${visitId}/attribute`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Post visit attribute\r\n  * @param {string} visitId - Visit uuid\r\n  * @param {any} json - Attribute payload\r\n  * @return {Observable<any>}\r\n  */\r\n  postAttribute(visitId, json): Observable<any> {\r\n    const url = `${this.baseURL}/visit/${visitId}/attribute`;\r\n    return this.http.post(url, json);\r\n  }\r\n\r\n  /**\r\n  * Update visit attribute\r\n  * @param {string} visitId - Visit uuid\r\n  * @param {string} attributeUuid - Visit attribute uuid\r\n  * @param {any} json - Attribute payload\r\n  * @return {Observable<any>}\r\n  */\r\n  updateAttribute(visitId, attributeUuid, json): Observable<any> {\r\n    const url = `${this.baseURL}/visit/${visitId}/attribute/${attributeUuid}`;\r\n    return this.http.post(url, json);\r\n  }\r\n\r\n  /**\r\n  * Delete visit attribute\r\n  * @param {string} visitId - Visit uuid\r\n  * @param {string} uuid - Visit attribute uuid\r\n  * @return {Observable<any>}\r\n  */\r\n  deleteAttribute(visitId, uuid): Observable<any> {\r\n    const url = `${this.baseURL}/visit/${visitId}/attribute/${uuid}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  /**\r\n  * Get patient details\r\n  * @param {string} id - Patient uuid\r\n  * @param {string} v - response format\r\n  * @return {Observable<any>}\r\n  */\r\n  patientInfo(id, v = 'custom:(uuid,attributes,identifiers,person:(uuid,display,gender,preferredName:(givenName,familyName,middleName),birthdate,age,preferredAddress:(cityVillage,address1,address2,country,stateProvince,countyDistrict,postalCode),attributes:(value,attributeType:(display))))'): Observable<any> {\r\n    // tslint:disable-next-line: max-line-length\r\n    const url = `${this.baseURL}/patient/${id}?v=${v}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Get whatsapp link\r\n  * @param {string} whatsapp - Whatspp number\r\n  * @param {string} msg - Message to be sent\r\n  * @return {Observable<any>}\r\n  */\r\n  getWhatsappLink(whatsapp: string, msg: string = `Hello I'm calling for consultation`) {\r\n    let text = encodeURI(msg);\r\n    let whatsappLink = `https://wa.me/${whatsapp}?text=${text}`;\r\n    return whatsappLink;\r\n  }\r\n\r\n  /**\r\n  * Parse observation data\r\n  * @param {any} data - Observation data\r\n  * @return {any} - Observation data with parsed value\r\n  */\r\n  getData(data: any) {\r\n    if (data?.value.toString().startsWith(\"{\")) {\r\n      let value = JSON.parse(data.value.toString());\r\n      data.value = value[\"en\"];\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n  * Parse custom observation data\r\n  * @param {any} data - Custom observation data\r\n  * @return {any} - Observation data with parsed value\r\n  */\r\n  getData2(data: any) {\r\n    if (data?.value_text.toString().startsWith(\"{\")) {\r\n      let value = JSON.parse(data.value_text.toString());\r\n      data.value_text = value[\"en\"];\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n  * Get awaiting visits\r\n  * @param {string} speciality - Visit speciality\r\n  * @param {number} page - Page number\r\n  * @return {Observable<any>}\r\n  */\r\n  getAwaitingVisits(speciality: string, page: number = 1): Observable<any> {\r\n    return this.http.get(`${this.mindmapURL}/openmrs/getAwaitingVisits?speciality=${speciality}&page=${page}`);\r\n  }\r\n\r\n  /**\r\n  * Get priority visits\r\n  * @param {string} speciality - Visit speciality\r\n  * @param {number} page - Page number\r\n  * @return {Observable<any>}\r\n  */\r\n  getPriorityVisits(speciality: string, page: number = 1): Observable<any> {\r\n    return this.http.get(`${this.mindmapURL}/openmrs/getPriorityVisits?speciality=${speciality}&page=${page}`);\r\n  }\r\n\r\n  /**\r\n  * Get inprogress visits\r\n  * @param {string} speciality - Visit speciality\r\n  * @param {number} page - Page number\r\n  * @return {Observable<any>}\r\n  */\r\n  getInProgressVisits(speciality: string, page: number = 1): Observable<any> {\r\n    return this.http.get(`${this.mindmapURL}/openmrs/getInProgressVisits?speciality=${speciality}&page=${page}`);\r\n  }\r\n\r\n  /**\r\n  * Get completed visits\r\n  * @param {string} speciality - Visit speciality\r\n  * @param {number} page - Page number\r\n  * @return {Observable<any>}\r\n  */\r\n  getCompletedVisits(speciality: string, page: number = 1, countOnly:boolean = false): Observable<any> {\r\n    return this.http.get(`${this.mindmapURL}/openmrs/getCompletedVisits?speciality=${speciality}&page=${page}&countOnly=${countOnly}`);\r\n  }\r\n\r\n /**\r\n  * Get follow up visits\r\n  * @param {string} speciality - Visit speciality\r\n  * @param {number} page - Page number\r\n  * @return {Observable<any>}\r\n  */\r\n getFollowUpVisits(speciality: string, page: number = 1, countOnly:boolean = false): Observable<any> {\r\n  return this.http.get(`${this.mindmapURL}/openmrs/getFollowUpVisits?speciality=${speciality}&page=${page}&countOnly=${countOnly}`);\r\n }\r\n\r\n  /**\r\n  * Get ended visits\r\n  * @param {string} speciality - Visit speciality\r\n  * @param {number} page - Page number\r\n  * @return {Observable<any>}\r\n  */\r\n  getEndedVisits(speciality: string, page: number = 1): Observable<any> {\r\n    return this.http.get(`${this.mindmapURL}/openmrs/getEndedVisits?speciality=${speciality}&page=${page}`);\r\n  }\r\n\r\n  /**\r\n   * Post visit data to abdm\r\n   * @param {any} json - Attribute payload\r\n   * @return {Observable<any>}\r\n   */\r\n  postVisitToABDM(json: any): Observable<any> {\r\n    const url = `${this.baseURLAbha}/abha/post-care-context`\r\n    return this.http.post(url, json);\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-reschedule-appointment-confirm',\r\n  templateUrl: './reschedule-appointment-confirm.component.html',\r\n  styleUrls: ['./reschedule-appointment-confirm.component.scss']\r\n})\r\nexport class RescheduleAppointmentConfirmComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\r\n  private dialogRef: MatDialogRef<RescheduleAppointmentConfirmComponent>) { }\r\n\r\n  /**\r\n  * Close modal\r\n  * @param {boolean} val - Dialog result\r\n  * @return {void}\r\n  */\r\n  close(val: boolean) {\r\n    this.dialogRef.close(val);\r\n  }\r\n\r\n}\r\n","<div class=\"intel-con-modal\">\r\n  <div class=\"close-btn-con\">\r\n    <button class=\"modal-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/CloseX.svg\" alt=\"\"></button>\r\n  </div>\r\n  <div class=\"modal-con mt-4\">\r\n    <img src=\"assets/svgs/appointment.svg\" alt=\"\" width=\"80px\" height=\"80px\">\r\n    <h6 class=\"mt-3\">{{'Reschedule the appointment'|translate}}</h6>\r\n    <p class=\"mt-2 text-center\">{{'Are you sure you want to reschedule appointment?'|translate }} </p>\r\n    <div class=\"slot-con d-flex justify-content-center align-items-center py-3\">\r\n      <div class=\"d-flex flex-column align-items-center justify-content-center px-2\">\r\n        <b>{{data?.appointment?.slotJsDate|date:'dd MMMM'}}</b>\r\n        <b>{{data?.appointment?.slotTime}}</b>\r\n      </div>\r\n      <div class=\"d-flex flex-column align-items-center justify-content-center px-2\">\r\n        <span class=\"text-muted\">to</span>\r\n      </div>\r\n      <div class=\"d-flex flex-column align-items-center justify-content-center px-2\">\r\n        <b>{{data?.newSlot?.date|date:'dd MMMM'}}</b>\r\n        <b>{{data?.newSlot?.slot}}</b>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-action-btn-con\">\r\n    <button class=\"modal-btn white-btn mr-3\" type=\"button\" (click)=\"close(false)\" data-test-id=\"btnCancel\">{{'Go Back'|translate}}</button>\r\n    <button class=\"modal-btn blue-btn\" type=\"button\" (click)=\"close(true)\" data-test-id=\"btnSubmit\">{{'Confirm'|translate}}</button>\r\n  </div>\r\n</div>\r\n","export const notifications = {\r\n    ADMIN_UNREAD_COUNT:'adminUnreadCount',\r\n    GET_ADMIN_UNREAD_COUNT:'getAdminUnreadCount',\r\n    DOCTOR_UNREAD_COUNT:'drUnreadCount',\r\n    GET_DOCTOR_UNREAD_COUNT:'getDrUnreadCount',\r\n    SUPPORT_MESSAGE:'supportMessage',\r\n    ISREAD_SUPPORT:'isreadSupport',\r\n    UPDATE_MESSAGE:'updateMessage',\r\n}\r\n\r\nexport const languages ={\r\n    SELECTED_LANGUAGE:'selectedLanguage',\r\n}\r\n\r\nexport const visitTypes = {\r\n    VISIT_NOTE_PROVIDER:'visitNoteProvider',\r\n    PATIENT_VISIT_PROVIDER:'patientVisitProvider',\r\n    ENDED_VISIT:'Ended Visit',\r\n    COMPLETED_VISIT:'Completed Visit',\r\n    IN_PROGRESS_VISIT:'In-progress Visit',\r\n    PRIORITY_VISIT:'Priority Visit',\r\n    AWAITING_VISIT:'Awaiting Visit',\r\n    PATIENT_INTERACTION:'Patient Interaction',\r\n    HW_INTERACTION:'HW Interaction',\r\n    GENERAL_PHYSICIAN:'General Physician',\r\n    ADULTINITIAL:'ADULTINITIAL',\r\n    ASSOCIATED_SYMPTOMS:'Associated symptoms',\r\n    CURRENT_COMPLAINT:'CURRENT COMPLAINT',\r\n    PATIENT_EXIT_SURVEY:'Patient Exit Survey',\r\n    VISIT_COMPLETE:'Visit Complete',\r\n    FLAGGED:'Flagged',\r\n    VITALS:'Vitals',\r\n    VISIT_NOTE:'Visit Note',\r\n    MEDICAL_HISTORY:'MEDICAL HISTORY',\r\n    FAMILY_HISTORY:'FAMILY HISTORY',\r\n    FOLLOW_UP:'Follow-up',\r\n    NEW:'New',\r\n}\r\n\r\nexport const doctorDetails = {\r\n    TELEPHONE_NUMBER:'Telephone Number',\r\n    SPECIALIZATION:'specialization',\r\n    PROVIDER:'provider',\r\n    USER:'user',\r\n    DOCTOR_NAME:'doctorName',\r\n    PASSWORD:'password',\r\n    PHONE_NUMBER:'phoneNumber',\r\n    WHATS_APP:'whatsapp',\r\n    BIRTHDATE:'birthdate',\r\n    ADDRESS:'address',\r\n    CONSULTATION_LANGUAGE:'consultationLanguage',\r\n    COUNTRY_CODE:'countryCode',\r\n    EMAIL_ID:'emailId',\r\n    FONT_OF_SIGN:'fontOfSign',\r\n    QUALIFICATION:'qualification',\r\n    REGISTRATION_NUMBER:'registrationNumber',\r\n    RESEARCH_EXPERIENCE:'researchExperience',\r\n    SIGNATURE:'signature',\r\n    SIGNATURE_TYPE:'signatureType',\r\n    TEXT_OF_SIGN:'textOfSign',\r\n    TYPE_OF_PROFESSION:'typeOfProfession',\r\n    WORK_EXPERIENCE:'workExperience',\r\n    WORK_EXPERIENCE_DETAILS:'workExperienceDetails',\r\n    WHATS_APP_NUMBER:'whatsAppNumber',\r\n    ROLE: 'user_role',\r\n    USER_NAME: 'username',\r\n    IS_NEW_DOCTOR: 'isNewDoctor'\r\n}\r\n\r\nexport const facility = {\r\n  facilities :[\r\n    { id : 1 , name : 'HSC'},\r\n    { id : 2 , name : 'PHC'},\r\n    { id : 3 , name : 'CHC'},\r\n    { id : 4 , name : 'SDH'},\r\n    { id : 5 , name : 'DH'},\r\n    { id : 6 , name : 'TH'},\r\n    { id : 7 , name : 'GH'},\r\n    { id : 8 , name : 'Private Hospital'},\r\n  ]\r\n};\r\n\r\nexport const specialization = {\r\n  specializations :[\r\n    {\r\n        id: 1,\r\n        name: 'General Physician'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Dermatologist'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Gynecologist'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Pediatrician'\r\n    }\r\n  ]\r\n};\r\n\r\nexport const refer_specialization = {\r\n  refer_specializations :[\r\n    { id: 1, name : 'CHO'},\r\n    { id: 2, name : 'MO'},\r\n    { id: 3, name : 'General Physician'},\r\n    { id: 4, name : 'Obstetrician & Gynecologist'},\r\n    { id: 5, name : 'Pediatrician'},\r\n    { id: 6, name : 'General Surgeon'},\r\n    { id: 7, name : 'Dermatologist'},\r\n    { id: 8, name : 'ENT Specialist'},\r\n    { id: 9, name : 'Eye Specialist'},\r\n    { id: 10, name : 'Dental Surgeon'},\r\n  ]\r\n};\r\n\r\nexport const refer_prioritie = {\r\n  refer_priorities :[\r\n    {id: 1, name: 'Elective'},\r\n    {id: 1, name: 'Urgent'}\r\n  ]\r\n}\r\n\r\nexport const strength = {\r\n  strengthList :[\r\n    {\r\n      id: 1,\r\n      name: '5 Mg'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '10 Mg'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '50 Mg'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '75 Mg'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: '100 Mg'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: '500 Mg'\r\n    },\r\n    {\r\n      id: 7,\r\n      name: '1000 Mg'\r\n    }\r\n  ]\r\n};\r\n\r\nexport const days = {\r\n  daysList :[\r\n    {\r\n      id: 1,\r\n      name: '7'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '14'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '20'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '25'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: '30'\r\n    }\r\n  ]\r\n};\r\n\r\nexport const timing = {\r\n  timingList :[\r\n    {\r\n      id: 1,\r\n      name: '1 - 0 - 0'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '0 - 1 - 0'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '0 - 0 - 1'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '1 - 1 - 0'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: '1 - 0 - 1'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: '0 - 1 - 1'\r\n    },\r\n    {\r\n      id: 7,\r\n      name: '1 - 1 - 1'\r\n    }\r\n  ]\r\n};\r\n\r\nexport const PICK_FORMATS = {\r\n  parse: { dateInput: { month: 'short', year: 'numeric', day: 'numeric' } },\r\n  display: {\r\n    dateInput: 'input',\r\n    monthYearLabel: { year: 'numeric', month: 'short' },\r\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n    monthYearA11yLabel: { year: 'numeric', month: 'long' }\r\n  }\r\n};\r\n\r\nexport const conceptIds = {\r\n  conceptAdditionlDocument : '07a816ce-ffc0-49b9-ad92-a1bf9bf5e2ba',\r\n  conceptPhysicalExamination : '200b7a45-77bc-4986-b879-cc727f5f7d5b',\r\n  conceptDiagnosis : '537bb20d-d09d-4f88-930b-cc45c7d662df',\r\n  conceptNote : '162169AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\r\n  conceptMed : 'c38c0c50-2fd2-4ae3-b7ba-7dd25adca4ca',\r\n  conceptAdvice : '67a050c1-35e5-451c-a4ab-fff9d57b0db1',\r\n  conceptTest : '23601d71-50e6-483f-968d-aeef3031346d',\r\n  conceptReferral : '605b6f15-8f7a-4c45-b06d-14165f6974be',\r\n  conceptFollow : 'e8caffd6-5d22-41c4-8d6a-bc31a44d0c86',\r\n  conceptDDx : 'bc48889e-b461-4e5e-98d1-31eb9dd6160e',\r\n  conceptDiagnosisClass : '8d4918b0-c2cc-11de-8d13-0010c6dffd0f',\r\n  conceptPastMedicalHistoryNotes: 'dc27d56c-f970-4eaa-88d0-46d55c2ab24c',\r\n  conceptFamilyHistoryNotes: '675bafa3-2d9b-4cd1-9d38-55a2f47a69a5',\r\n  conceptFollowUpInstruction: 'e444b5e9-e3b9-4cb1-92ee-29bba00b33d0'\r\n}\r\n\r\nexport const WEBRTC = {\r\n  CHAT_TEXT_LIMIT: 1000\r\n}\r\n\r\nexport const visitAttributeTypes = {\r\n  patientCallDuration : '35e64f4a-d0a5-40bc-8010-8c61d52cc4b1'\r\n}","import { languages, visitTypes } from \"../config/constant\";\r\n// import * as moment from 'moment';\r\nimport moment from 'moment';\r\nimport { ProviderAttributeModel } from \"../model/model\";\r\nimport { DecimalPipe } from \"@angular/common\";\r\n// import { environment } from \"src/environments/environment\";\r\n\r\nexport function getCacheData(parse: boolean, key: string) {\r\n  if (parse) {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(key));\r\n    } catch (error) {\r\n      return null\r\n    }\r\n  } else {\r\n    return localStorage.getItem(key);\r\n  }\r\n}\r\n\r\nexport function setCacheData(key: string, value: string) {\r\n  localStorage.setItem(key, value);\r\n}\r\n\r\nexport function deleteCacheData(key: string) {\r\n  localStorage.removeItem(key);\r\n}\r\n\r\nexport function isJsonString(str) {\r\n  try {\r\n    const json = JSON.parse(str);\r\n    return (typeof json === 'object');\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function getEncounterProviderUUID() {\r\n  return getCacheData(true, visitTypes.VISIT_NOTE_PROVIDER).encounterProviders[0].provider.uuid;\r\n}\r\n\r\nexport function getEncounterUUID() {\r\n  return getCacheData(true, visitTypes.VISIT_NOTE_PROVIDER).uuid;\r\n}\r\n\r\n/**\r\n  * Check how old the date is from now\r\n  * @param {string} data - Date in string format\r\n  * @return {string} - Returns how old the date is from now\r\n  */\r\nexport function checkIfDateOldThanOneDay(data: string) {\r\n  let hours = moment(data).diff(moment(), 'hours');\r\n  let minutes = moment(data).diff(moment(), 'minutes');\r\n  minutes = minutes - (hours * 60);\r\n  let resString = \"\";\r\n  if (hours >= 24) {\r\n    resString = moment(data).format('DD MMM, YYYY hh:mm A');\r\n  } else {\r\n    if (hours > 1) {\r\n      resString += hours + \" Hours\";\r\n    } else if(hours === 1) {\r\n      resString += hours + \" Hour\";\r\n    }\r\n    if (minutes < 0) {\r\n      resString = `Due : ${moment(data).format('DD MMM, YYYY hh:mm A')}`;\r\n    } else if (minutes === 1){\r\n      resString += \" \" + minutes + \" Minute\"\r\n    } else {\r\n      resString += \" \" + minutes + \" Minutes\"\r\n    }\r\n  }\r\n  return resString.trim();\r\n}\r\n/**\r\n  * Compare data for sorting\r\n  * @param {number|string} a\r\n  * @param {number|string} b\r\n  * @param {boolean} isAsc\r\n  * @return {number} - Returns order as 1 or -1\r\n  */\r\nexport function compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n/**\r\n* Get speciality\r\n* @param {ProviderAttributeModel[]} attr - Array of provider attributes\r\n* @return {string} - Speciality\r\n*/\r\nexport function getSpecialization(attr: ProviderAttributeModel[] = []): string {\r\n  let specialization = '';\r\n  for (const a of attr) {\r\n    if (a.attributeType.uuid == 'ed1715f5-93e2-404e-b3c9-2a2d9600f062' && !a.voided) {\r\n      specialization = a.value;\r\n      break;\r\n    }\r\n  }\r\n  return specialization;\r\n}\r\n\r\n/**\r\n* Retrieve the appropriate language value from an element.\r\n* @param {any} element - An object containing `lang` and `name`.\r\n* @return {string} - The value in the selected language or the first available one.\r\n* Defaults to `element.name` if no language value is found.\r\n*/\r\ninterface ElementLang {\r\n  [key: string]: string; // Represents language code to string mappings\r\n}\r\n\r\ninterface Element {\r\n  lang: ElementLang;\r\n  name: string;\r\n}\r\n\r\nexport function getFieldValueByLanguage(element: Element | null | undefined): string {\r\n  const selectedLanguage = getCacheData(false, languages.SELECTED_LANGUAGE) as string;\r\n\r\n  // Check if selected language exists in the lang object and is not empty\r\n  if (element?.lang?.[selectedLanguage]?.trim()) {\r\n    return element.lang[selectedLanguage].trim();\r\n  }\r\n\r\n  // Return the first non-empty language value\r\n  for (const langValue of Object.values(element?.lang || {})) {\r\n    if (langValue.trim()) {\r\n      return langValue.trim();\r\n    }\r\n  }\r\n\r\n  // Fallback to element.name if no valid language value found or element is invalid\r\n  return element?.name || \"\";\r\n}\r\n\r\nexport function calculateBMI(vitals: any, vitalObs: any, _locale: string = 'en') {\r\n  const heightUUID = vitals?.find((v: any) => v.key === 'height_cm')?.uuid;\r\n  const weightUUID = vitals?.find((v: any) => v.key === 'weight_kg')?.uuid;\r\n  let height = null, weight = null;\r\n  if(heightUUID && weightUUID) {\r\n    height = vitalObs.find((e: { concept: { uuid: any; }; }) => e.concept.uuid === heightUUID)?.value;\r\n    weight = vitalObs.find((e: { concept: { uuid: any; }; }) => e.concept.uuid === weightUUID)?.value;\r\n  }\r\n  if(height && weight) {\r\n    const decimalPipe = new DecimalPipe(_locale)\r\n    return decimalPipe.transform(weight / ((height/100) * (height/100)), \"1.2-2\")\r\n  }  \r\n  return null;\r\n}\r\n\r\nexport function isFeaturePresent(featureLists: string, featureName: string, notInclude = false): boolean {\r\n  const featureList = featureLists ?? []; // Extract from ENV file\r\n  if(notInclude) return !featureList.includes(featureName);\r\n  return featureList.includes(featureName);\r\n}\r\n\r\nexport function getCallDuration(given_seconds: number){\r\n  let dateObj = new Date(given_seconds * 1000);\r\n  let hours = dateObj.getUTCHours();\r\n  let minutes = dateObj.getUTCMinutes();\r\n  let seconds = dateObj.getSeconds();\r\n  return hours.toString().padStart(2, '0') + ':' + \r\n      minutes.toString().padStart(2, '0') + ':' + \r\n      seconds.toString().padStart(2, '0');\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiResponseModel } from '../../model/model';\r\nimport { AppointmentService } from '../../services/appointment.service';\r\nimport { getCacheData } from '../../utils/utility-functions';\r\nimport { doctorDetails } from '../../config/constant';\r\n\r\n@Component({\r\n  selector: 'app-cancel-appointment-confirm',\r\n  templateUrl: './cancel-appointment-confirm.component.html',\r\n})\r\nexport class CancelAppointmentConfirmComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\r\n    private dialogRef: MatDialogRef<CancelAppointmentConfirmComponent>,\r\n    private appointmentService: AppointmentService,\r\n    private toastr: ToastrService, \r\n    private translateService: TranslateService\r\n  ) { }\r\n\r\n  /**\r\n  * Cancel appointment\r\n  * @return {void}\r\n  */\r\n  cancel() {\r\n    const payload = {\r\n      id: this.data.id,\r\n      visitUuid: this.data.visitUuid,\r\n      hwUUID: this.userId,\r\n    };\r\n    this.appointmentService.cancelAppointment(payload).subscribe((res: ApiResponseModel) => {\r\n        if (res) {\r\n          if (res.status) {\r\n            this.close(true);\r\n          } else {\r\n            this.toastr.error(this.translateService.instant('You can\\'t cancel the past appointment'), this.translateService.instant('Can\\'t Cancel'));\r\n            this.close(false);\r\n          }\r\n        }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Get user uuid from localstorage user\r\n  * @return {string} - User uuid\r\n  */\r\n  get userId() {\r\n    return getCacheData(true, doctorDetails.USER).uuid;\r\n  }\r\n\r\n  /**\r\n  * Close modal\r\n  * @param {boolean} val - Dialog result\r\n  * @return {void}\r\n  */\r\n  close(val: boolean) {\r\n    this.dialogRef.close(val);\r\n  }\r\n\r\n}\r\n","<div class=\"intel-con-modal\">\r\n  <div class=\"close-btn-con\">\r\n    <button class=\"modal-close-btn\" (click)=\"close(false)\"><img src=\"assets/svgs/CloseX.svg\" alt=\"\" data-test-id=\"btnCloseCancelAppConfirm\"></button>\r\n  </div>\r\n  <div class=\"modal-con mt-4\">\r\n    <img src=\"assets/svgs/video-pink.svg\" alt=\"\" width=\"80px\" height=\"80px\">\r\n    <h6 class=\"mt-3\">{{'Cancel the appointment'|translate}}</h6>\r\n    <p class=\"mt-2 text-center\">{{'Are you sure you want to cancel your appointment on'|translate}} <b>{{data?.slotJsDate|date:'dd MMMM'}}</b> {{'at'|translate}} <b>{{data?.slotTime}}</b>?</p>\r\n  </div>\r\n  <div class=\"modal-action-btn-con\">\r\n    <button class=\"modal-btn white-btn mr-3\" type=\"button\" (click)=\"close(false)\" data-test-id=\"btnGoBackCancelAppConfirm\">{{'Go back'|translate}}</button>\r\n    <button class=\"modal-btn blue-btn\" type=\"button\" (click)=\"cancel()\" data-test-id=\"btnCancelAppConfirm\">{{'Cancel'|translate}}</button>\r\n  </div>\r\n</div>\r\n","import { formatDate } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter } from '@angular/material/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// import * as moment from 'moment';\r\nimport moment from 'moment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiResponseModel, RescheduleAppointmentModalResponseModel, ScheduleDataModel, SlotModel } from '../../model/model';\r\nimport { AppointmentService } from '../../services/appointment.service';\r\n\r\nexport const PICK_FORMATS = {\r\n  parse: { dateInput: { month: 'short', year: 'numeric', day: 'numeric' } },\r\n  display: {\r\n    dateInput: 'input',\r\n    monthYearLabel: { year: 'numeric', month: 'short' },\r\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n    monthYearA11yLabel: { year: 'numeric', month: 'long' }\r\n  }\r\n};\r\n\r\nclass PickDateAdapter extends NativeDateAdapter {\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (displayFormat === 'input') {\r\n      return formatDate(date, 'dd MMMM yyyy', this.locale);\r\n    } else {\r\n      return date.toDateString();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-reschedule-appointment',\r\n  templateUrl: './reschedule-appointment.component.html',\r\n  styleUrls: ['./reschedule-appointment.component.scss'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: PickDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS }\r\n  ]\r\n})\r\nexport class RescheduleAppointmentComponent implements OnInit {\r\n\r\n  minDate: Date;\r\n  scheduleData: ScheduleDataModel = {\r\n    morning: [],\r\n    afternoon: [],\r\n    evening: []\r\n  };\r\n  selectedDate = moment().format(\"YYYY-MM-DD\");\r\n  slots: SlotModel[] = [];\r\n  selectedSlot: SlotModel;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\r\n    private dialogRef: MatDialogRef<RescheduleAppointmentComponent>,\r\n    private appointmentService: AppointmentService,\r\n    private toastr: ToastrService,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.minDate = new Date();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAppointmentSlots();\r\n  }\r\n\r\n  /**\r\n  * Callback for date change event\r\n  * @param {Event} event - Date changed event\r\n  * @return {void}\r\n  */\r\n  dateChanged(event) {\r\n    this.selectedSlot = null;\r\n    this.selectedDate = moment(event.target.value).format(\"YYYY-MM-DD\");\r\n    this.getAppointmentSlots();\r\n  }\r\n\r\n  /**\r\n  * Get appointment slots for a given speciality, from and to date\r\n  * @param {string} fromDate - From date\r\n  * @param {string} toDate - To date\r\n  * @param {string} speciality - Speciality\r\n  * @return {void}\r\n  */\r\n  getAppointmentSlots(fromDate = this.selectedDate, toDate = this.selectedDate, speciality = this.data?.speciality) {\r\n    this.scheduleData = {\r\n      morning: [],\r\n      afternoon: [],\r\n      evening: []\r\n    };\r\n    this.appointmentService.getAppointmentSlots(moment(fromDate).format(\"DD/MM/YYYY\"), moment(toDate).format(\"DD/MM/YYYY\"), speciality).subscribe((res: ApiResponseModel) => {\r\n      this.slots = res.dates;\r\n      this.slots.forEach((slot: SlotModel) => {\r\n        if (moment(slot.slotTime, \"LT\").isBefore(moment(\"12:00 PM\", \"LT\"))) {\r\n          this.scheduleData.morning.push(slot.slotTime);\r\n        } else if (moment(slot.slotTime, \"LT\").isBetween(moment(\"11:30 AM\", \"LT\"), moment(\"5:00 PM\", \"LT\"))) {\r\n          this.scheduleData.afternoon.push(slot.slotTime);\r\n        } else {\r\n          this.scheduleData.evening.push(slot.slotTime);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Reschedule appointment\r\n  * @return {void}\r\n  */\r\n  reschedule() {\r\n    if (this.selectedDate && this.selectedSlot) {\r\n      this.close({ date: this.selectedDate, slot: this.selectedSlot });\r\n    } else {\r\n      this.toastr.warning(this.translate.instant(\"Please select slot to reschedule.\"), this.translate.instant(\"Select Slot\"));\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Close modal\r\n  * @param {boolean|RescheduleAppointmentModalResponseModel} val - Dialog result\r\n  * @return {void}\r\n  */\r\n  close(val: boolean|RescheduleAppointmentModalResponseModel) {\r\n    this.dialogRef.close(val);\r\n  }\r\n\r\n}\r\n","<div class=\"reschedule-modal\">\r\n  <div class=\"modal-title\">\r\n    <h6 class=\"mb-0\">{{ 'Reschedule appointment' | translate }}</h6>\r\n    <button class=\"modal-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/Close.svg\" alt=\"\"></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 p-0\">\r\n          <div class=\"select-date-con\">\r\n            <div class=\"form-group row\">\r\n              <label for=\"expiryDate\" class=\"col-sm-3 col-form-label\">{{ 'Select Date' | translate }}</label>\r\n              <div class=\"col-sm-6\">\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedDate\" (dateChange)=\"dateChanged($event)\" [min]=\"minDate\" [matDatepicker]=\"dp1\" placeholder=\"{{'Select date'|translate}}\" aria-label=\"Date\"\r\n                    aria-describedby=\"basic-addon1\" readonly data-test-id=\"etDate\">\r\n                  <mat-datepicker #dp1></mat-datepicker>\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                      <mat-datepicker-toggle matSuffix [for]=\"dp1\" data-test-id=\"dpDate\">\r\n                        <img matDatepickerToggleIcon src=\"assets/svgs/calendar-date.svg\" alt=\"\">\r\n                      </mat-datepicker-toggle>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"slots-con\">\r\n            <h6>{{ 'Select a timeslot' | translate }}</h6>\r\n            <div class=\"slot-section\" *ngIf=\"scheduleData.morning.length;\">\r\n              <h6>\r\n                <img src=\"assets/svgs/sunrise.svg\" alt=\"\" class=\"mr-2\" />\r\n                {{ 'Morning' | translate }}\r\n              </h6>\r\n              <div class=\"slot-chips\">\r\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.morning;\" (click)=\"selectedSlot = s\">\r\n                  {{s}}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"slot-section\" *ngIf=\"scheduleData.afternoon.length;\">\r\n              <h6>\r\n                <img src=\"assets/svgs/sun.svg\" alt=\"\" class=\"mr-2\" />\r\n                {{ 'Afternoon' | translate }}\r\n              </h6>\r\n              <div class=\"slot-chips\">\r\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.afternoon;\" (click)=\"selectedSlot = s\">\r\n                  {{s}}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"slot-section\" *ngIf=\"scheduleData.evening.length;\">\r\n              <h6>\r\n                <img src=\"assets/svgs/sunset.svg\" alt=\"\" class=\"mr-2\" />\r\n                {{ 'Evening' | translate }}\r\n              </h6>\r\n              <div class=\"slot-chips\">\r\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.evening;\" (click)=\"selectedSlot = s\">\r\n                  {{s}}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"d-flex justify-content-center py-2\">\r\n            <button class=\"confirm-btn\" type=\"button\" (click)=\"reschedule()\" data-test-id=\"btnSubmit\">{{ 'Reschedule' | translate }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { RescheduleAppointmentConfirmComponent } from '../modal-components/reschedule-appointment-confirm/reschedule-appointment-confirm.component';\r\nimport { CancelAppointmentConfirmComponent } from '../modal-components/cancel-appointment-confirm/cancel-appointment-confirm.component';\r\nimport { RescheduleAppointmentComponent } from '../modal-components/reschedule-appointment/reschedule-appointment.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n\r\n  /**\r\n  * Open cancel appointment confirmation modal\r\n  * @param {any} data - Dialog data\r\n  * @return {Observable<any>} - Dialog result\r\n  */\r\n  openConfirmCancelAppointmentModal(data: any): Observable<any> {\r\n    const dialogRef = this.dialog.open(CancelAppointmentConfirmComponent, { panelClass: \"modal-md\", data, hasBackdrop: true, disableClose: true });\r\n    return dialogRef.afterClosed();\r\n  }\r\n\r\n  /**\r\n  * Open reschedule appointment modal\r\n  * @param {any} data - Dialog data\r\n  * @return {Observable<any>} - Dialog result\r\n  */\r\n  openRescheduleAppointmentModal(data: any): Observable<any> {\r\n    const dialogRef = this.dialog.open(RescheduleAppointmentComponent, { panelClass: \"modal-md\", data, hasBackdrop: true, disableClose: true });\r\n    return dialogRef.afterClosed();\r\n  }\r\n\r\n  /**\r\n  * Open reschedule appointment confirmation modal\r\n  * @param {any} data - Dialog data\r\n  * @return {Observable<any>} - Dialog result\r\n  */\r\n  openRescheduleAppointmentConfirmModal(data: any): Observable<any> {\r\n    const dialogRef = this.dialog.open(RescheduleAppointmentConfirmComponent, { panelClass: \"modal-md\", data, hasBackdrop: true, disableClose: true });\r\n    return dialogRef.afterClosed();\r\n  }\r\n    \r\n  /**\r\n  * Convert blob to base64\r\n  * @param {Blob} blob - Blob  file\r\n  * @return {Promise} - Promise containing base64\r\n  */\r\n  blobToBase64(blob) {\r\n    return new Promise((resolve, _) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => resolve(reader.result);\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MindmapService {\r\n  private mindmapURL;\r\n \r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('environment') environment\r\n  ) {\r\n    this.mindmapURL = environment.mindmapURL;\r\n  }\r\n\r\n  /**\r\n  * Get mindmap keys\r\n  * @return {Observable<any>}\r\n  */\r\n  getMindmapKey(): Observable<any> {\r\n    const url = `${this.mindmapURL}/mindmap`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Post mindmap\r\n  * @param {any} value - Payload for post mindmap\r\n  * @return {Observable<any>}\r\n  */\r\n  postMindmap(value): Observable<any> {\r\n    const url = `${this.mindmapURL}/mindmap/upload`;\r\n    return this.http.post(url, value);\r\n  }\r\n\r\n  /**\r\n  * Get mindmap details from key\r\n  * @param {string} key - Mindmap key\r\n  * @return {Observable<any>}\r\n  */\r\n  detailsMindmap(key): Observable<any> {\r\n    const url = `${this.mindmapURL}/mindmap/details/${key}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n  * Add/update mindmap license key\r\n  * @param {any} payload - Payload for mindmap key to add/update\r\n  * @return {Observable<any>}\r\n  */\r\n  addUpdateLicenseKey(payload): Observable<any> {\r\n    const url = `${this.mindmapURL}/mindmap/addUpdatekey`;\r\n    return this.http.post(url, payload);\r\n  }\r\n\r\n  /**\r\n  * Update mindmap key image\r\n  * @param {string} key - Mindmap key\r\n  * @param {string} imageName - Image name\r\n  * @param {string} value - Image base64\r\n  * @return {Observable<any>}\r\n  */\r\n  updateImage(key, imageName, value): Observable<any> {\r\n    const url = `${this.mindmapURL}/mindmap/${key}/${imageName}`;\r\n    return this.http.put(url, value);\r\n  }\r\n\r\n  /**\r\n  * Delete mindmap\r\n  * @param {string} key - Mindmap key\r\n  * @param {any} data - Mindmap data\r\n  * @return {Observable<any>}\r\n  */\r\n  deleteMindmap(key, data): Observable<any> {\r\n    const url = `${this.mindmapURL}/mindmap/delete/${key}`;\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  /**\r\n  * Toggle mindmap status\r\n  * @param {any} data - Mindmap data\r\n  * @return {Observable<any>}\r\n  */\r\n  toggleMindmapStatus(data: any): Observable<any> {\r\n    const url = `${this.mindmapURL}/mindmap/toggleStatus`;\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n    /**\r\n  * Notify App side\r\n  * @param {any} hwUuid - Healthworker Id\r\n  * @param {any} payload - Notifaication message\r\n  * @return {Observable<any>}\r\n  */\r\n  notifyApp(hwUuid: any, payload: any) : Observable<any>{\r\n    return this.http.post(`${this.mindmapURL}/mindmap/notify-app/${hwUuid}`, payload)\r\n  }\r\n\r\n\r\n  /**\r\n  * Send notification to health worker for available prescription\r\n  * @returns {void}\r\n  */\r\n  notifyHwForRescheduleAppointment(appointment): void {\r\n    const hwUuid = appointment?.hwUUID;\r\n    const openMRSID = appointment?.openMrsId;\r\n    const payload = {\r\n      title: `Appointment rescheduled for ${appointment?.patientName || 'Patient'}`,\r\n      body: \"Click notification to see!\",\r\n      type: \"appointment\",\r\n      data: {\r\n        patientFirstName: appointment?.patientName ?? '',\r\n        patientUuid: appointment?.patientId,\r\n        patientOpenMrsId: openMRSID,\r\n        visitUuid: appointment?.visitUuid,\r\n        slotDateTime: appointment?.slotJsDate\r\n      }\r\n    }\r\n    this.notifyApp(hwUuid, payload).subscribe();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { LanguageModel, PatientRegistrationFieldsConfigModel, VitalModel, SpecializationModel, WebRTCConfigModel, PatientVisitSummaryConfigModel, PatientVisitSection } from '../model/model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppConfigService {\r\n\r\n  private configURL;\r\n  public version: string;\r\n  public apiEndpoint: string;\r\n  public specialization: SpecializationModel[];\r\n  public language: LanguageModel[];\r\n  public patient_registration: PatientRegistrationFieldsConfigModel;\r\n  public theme_config: any[];\r\n  public patient_vitals: VitalModel[];\r\n  public patient_diagnostics:any[];\r\n  public webrtc_section: boolean;\r\n  public webrtc: WebRTCConfigModel;\r\n  public patient_visit_summary: PatientVisitSummaryConfigModel;\r\n  public patient_vitals_section: boolean;\r\n  public patient_reg_other: boolean;\r\n  public patient_reg_address: boolean;\r\n  public abha_section: boolean;\r\n  public sidebar_menus: { [key: string]: boolean };\r\n  public patient_visit_sections: PatientVisitSection[]\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('environment') environment\r\n  ) {\r\n    this.configURL = environment.configURL;\r\n  }\r\n\r\n  load(): Promise<any> {\r\n    const promise = this.http.get(`${this.configURL}/config/getPublishedConfig`)\r\n      .toPromise()\r\n      .then((data) => {\r\n        this.setPatientVisitSections(data)\r\n        Object.assign(this, data);\r\n        return data;\r\n      });\r\n    return promise;\r\n  }\r\n  \r\n\r\n  setPatientVisitSections(data: any) {\r\n    data.patient_visit_sections = (data?.patient_visit_sections ?? [])\r\n    .map((pvs: PatientVisitSection) => {\r\n      return {\r\n        ...pvs,\r\n        lang: pvs.lang ? (typeof pvs.lang === 'object' ? pvs.lang : JSON.parse(pvs.lang)) : null,\r\n      }\r\n    })\r\n  }\r\n\r\n  public get tourConfig(){\r\n    try {\r\n      return JSON.parse(this.theme_config.find((config: any) => config.key === 'help_tour_config').value);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public get patientRegFields() {\r\n    const fields = [];\r\n    Object.keys(this.patient_registration).forEach(obj=>{\r\n      console.log(obj, \"OBJs\");\r\n      \r\n      fields.push(...this.patient_registration[obj]\r\n        .filter((e: { is_enabled: any; })=>e.is_enabled)\r\n        .map((e: { name: any; })=>e.name));\r\n    });    \r\n    return fields;\r\n  }\r\n\r\n  public checkPatientRegField(fieldName: any, fields: string | any[]): boolean{\r\n    return fields.indexOf(fieldName) !== -1;\r\n  }\r\n\r\n}\r\n    ","import { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'img[src]',\r\n  host: {\r\n    '[src]': 'checkPath(src)',\r\n    '(error)': 'onError()'\r\n  }\r\n})\r\nexport class DefaultImageDirective {\r\n  @Input() src: string;\r\n  public defaultImg: string = 'assets/svgs/user.svg';\r\n\r\n  public onError() {\r\n    if(this.src.includes('openmrs'))\r\n      this.src = this.defaultImg;\r\n  }\r\n\r\n  public checkPath(src: string) {\r\n    return src || this.defaultImg;\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild, Input, SimpleChanges, ChangeDetectionStrategy, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ApiResponseModel, AppointmentModel, CustomEncounterModel, CustomObsModel, CustomVisitModel, ProviderAttributeModel, RescheduleAppointmentModalResponseModel, PatientVisitSummaryConfigModel } from '../../model/model';\r\nimport { AppointmentService } from '../../services/appointment.service';\r\nimport { VisitService } from '../../services/visit.service';\r\nimport moment from 'moment';\r\nimport { CoreService } from '../../services/core.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { getCacheData, checkIfDateOldThanOneDay } from '../../utils/utility-functions';\r\nimport { doctorDetails, languages, visitTypes } from '../../config/constant';\r\nimport { MindmapService } from '../../services/mindmap.service';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { formatDate } from '@angular/common';\r\nimport { NgxRolesService } from 'ngx-permissions';\r\n\r\n@Component({\r\n  selector: 'lib-table-grid',\r\n  templateUrl: './table-grid.component.html',\r\n  styleUrls: ['./table-grid.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TableGridComponent implements OnInit {\r\n  \r\n  @Input() pluginConfigObs: any;\r\n  displayedAppointmentColumns: any = [];\r\n  displayedColumns: string[] = [];\r\n  dataSource = new MatTableDataSource<any>();\r\n  patientRegFields: string[] = [];\r\n  isMCCUser = false;\r\n  pageSizeOptions = [5, 10, 20];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\r\n  filteredDateAndRangeForm: FormGroup;\r\n  @ViewChild('tempPaginator') tempPaginator: MatPaginator;\r\n  @ViewChild(MatMenuTrigger) menuTrigger: MatMenuTrigger;\r\n\r\n  panelExpanded: boolean = true;\r\n  mode: 'date' | 'range' = 'date';\r\n  maxDate: Date;\r\n\r\n  appointments: AppointmentModel[] = [];\r\n  priorityVisits: CustomVisitModel[] = [];\r\n  awaitingVisits: CustomVisitModel[] = [];\r\n  inProgressVisits: CustomVisitModel[] = [];\r\n  completedVisits: CustomVisitModel[] = [];\r\n  followUpVisits: CustomVisitModel[] = [];\r\n\r\n  specialization: string = '';\r\n  @Output() visitsCountDate = new EventEmitter<any>();\r\n  visitsLengthCount: number = 0;\r\n  isFilterApplied = false;\r\n  pvs: PatientVisitSummaryConfigModel;\r\n  baseURL: any;\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  constructor(\r\n    private appointmentService: AppointmentService,\r\n    private visitService: VisitService,\r\n    private coreService: CoreService,\r\n    private toastr: ToastrService,\r\n    private translateService: TranslateService,\r\n    private mindmapService: MindmapService,\r\n    private sanitizer: DomSanitizer,\r\n    private appConfigService: AppConfigService,\r\n    private rolesService: NgxRolesService,\r\n    @Inject('environment') environment\r\n  ) { \r\n    this.baseURL = environment.baseURL;\r\n    this.filteredDateAndRangeForm = this.createFilteredDateRangeForm();\r\n  }\r\n\r\n  /**\r\n   * Creates a filtered date range form with required date fields\r\n   * @return {FormGroup} - The created form group\r\n   */\r\n  createFilteredDateRangeForm(): FormGroup {\r\n    return new FormGroup({\r\n      date: new FormControl('', [Validators.required]),\r\n      startDate: new FormControl(null, Validators.required),\r\n      endDate: new FormControl(null, Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isMCCUser = !!this.rolesService.getRole('ORGANIZATIONAL:MCC');\r\n\r\n    this.appConfigService.load().then(() => {\r\n    this.displayedColumns = this.displayedColumns.filter(col=>(col!=='age' || this.checkPatientRegField('Age')));\r\n      Object.keys(this.appConfigService.patient_registration).forEach(obj=>{\r\n        this.patientRegFields.push(...this.appConfigService.patient_registration[obj].filter((e: { is_enabled: any; })=>e.is_enabled).map((e: { name: any; })=>e.name));\r\n      });\r\n      this.pvs = { ...this.appConfigService.patient_visit_summary }; \r\n      this.pvs.appointment_button = this.pvs.appointment_button;\r\n      this.displayedColumns = this.displayedColumns.filter(col=> {\r\n        if(col === 'drName' && !this.isMCCUser) return false;\r\n        if(col === 'age') return this.checkPatientRegField('Age');\r\n        return true;\r\n      });\r\n\r\n      if(!this.pvs.awaiting_visits_patient_type_demarcation){\r\n        this.displayedColumns = this.displayedColumns.filter(col=>(col!=='patient_type'));\r\n      }\r\n    }).catch((error) => {\r\n      console.error('Error loading app config', error);\r\n    });\r\n\r\n    this.translateService.use(getCacheData(false, languages.SELECTED_LANGUAGE));\r\n    let provider = getCacheData(true, doctorDetails.PROVIDER);\r\n    if (provider) {\r\n      if (provider.attributes.length) {\r\n        this.specialization = this.getSpecialization(provider.attributes);\r\n      }\r\n      if(this.pluginConfigObs?.pluginConfigObsFlag === \"Appointment\"){\r\n        this.getAppointments();\r\n      }\r\n      if(this.pluginConfigObs?.pluginConfigObsFlag === \"Awaiting\"){\r\n        this.getAwaitingVisits(1);\r\n      }\r\n      if(this.pluginConfigObs?.pluginConfigObsFlag === \"Priority\"){\r\n        this.getPriorityVisits(1);\r\n      }\r\n      if(this.pluginConfigObs?.pluginConfigObsFlag === \"InProgress\"){\r\n        this.getInProgressVisits(1);\r\n      }\r\n      if(this.pluginConfigObs?.pluginConfigObsFlag === \"Completed\"){\r\n        this.getCompletedVisits();\r\n      }if(this.pluginConfigObs?.pluginConfigObsFlag === \"FollowUp\"){\r\n        this.getFollowUpVisit();\r\n      }\r\n    }\r\n    this.maxDate = this.pluginConfigObs.filterObs.filterDateMax;\r\n    if(this.pluginConfigObs.hasOwnProperty(\"pageSizeOptions\")){\r\n      this.pageSizeOptions = this.pluginConfigObs.pageSizeOptions\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dynmaic label Display\r\n   * @param changes pluginConfigObs \r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes[\"pluginConfigObs\"] && changes[\"pluginConfigObs\"].currentValue) {\r\n      this.displayedAppointmentColumns = this.pluginConfigObs.tableColumns || [];\r\n      this.displayedColumns = this.displayedAppointmentColumns.map(\r\n        (column) => column.key\r\n      );\r\n    }\r\n    if( (!changes['pluginConfigObs'].firstChange) && this.pluginConfigObs.pluginConfigObsFlag == \"Appointment\" && changes[\"pluginConfigObs\"].currentValue?.tableHeader !== changes[\"pluginConfigObs\"].previousValue?.tableHeader){\r\n      this.getAppointments();\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Retreive the chief complaints for the visit\r\n  * @param {CustomVisitModel} visit - Visit\r\n  * @return {string[]} - Chief complaints array\r\n  */\r\n  getCheifComplaint(visit: CustomVisitModel): string[] {\r\n    let recent: string[] = [];\r\n    const encounters = visit.encounters;\r\n    encounters.forEach((encounter: CustomEncounterModel) => {\r\n      const display = encounter.type?.name;\r\n      if (display.match(visitTypes.ADULTINITIAL) !== null) {\r\n        const obs = encounter.obs;\r\n        obs.forEach((currentObs: CustomObsModel) => {\r\n          if (currentObs.concept_id == 163212) {\r\n            const currentComplaint = this.visitService.getData2(currentObs)?.value_text.replace(new RegExp('►', 'g'), '').split('<b>');\r\n            for (let i = 1; i < currentComplaint.length; i++) {\r\n              const obs1 = currentComplaint[i].split('<');\r\n              if (!obs1[0].match(visitTypes.ASSOCIATED_SYMPTOMS)) {\r\n                recent.push(obs1[0]);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return recent;\r\n  }\r\n\r\n  /**\r\n  * Check how old the date is from now\r\n  * @param {string} data - Date in string format\r\n  * @return {string} - Returns how old the date is from now\r\n  */\r\n  checkIfDateOldThanOneDay(data: string) {\r\n    let hours = moment(data).diff(moment(), 'hours');\r\n    let minutes = moment(data).diff(moment(), 'minutes');\r\n    if(hours > 24) {\r\n      return moment(data).format('DD MMM, YYYY hh:mm A');\r\n    };\r\n    if (hours < 1) {\r\n      if(minutes < 0) return `Due : ${moment(data).format('DD MMM, YYYY hh:mm A')}`;\r\n      return `${minutes} minutes`;\r\n    }\r\n    return `${hours} hrs`;\r\n  }\r\n\r\n  /**\r\n  * Reschedule appointment\r\n  * @param {AppointmentModel} appointment - Appointment to be rescheduled\r\n  * @return {void}\r\n  */\r\n  reschedule(appointment: AppointmentModel) {\r\n    const len = appointment.visit.encounters.filter((e: CustomEncounterModel) => {\r\n      return (e.type.name == visitTypes.PATIENT_EXIT_SURVEY || e.type.name == visitTypes.VISIT_COMPLETE);\r\n    }).length;\r\n    const isCompleted = Boolean(len);\r\n    if (isCompleted) {\r\n      this.toastr.error(this.translateService.instant(\"Visit is already completed, it can't be rescheduled.\"), this.translateService.instant('Rescheduling failed!'));\r\n    } else if(appointment.visitStatus == 'Visit In Progress') {\r\n      this.toastr.error(this.translateService.instant(\"Visit is in progress, it can't be rescheduled.\"), this.translateService.instant('Rescheduling failed!'));\r\n    } else {\r\n      this.coreService.openRescheduleAppointmentModal(appointment).subscribe((res: RescheduleAppointmentModalResponseModel) => {\r\n        if (res) {\r\n          let newSlot = res;\r\n          this.coreService.openRescheduleAppointmentConfirmModal({ appointment, newSlot }).subscribe((result: boolean) => {\r\n            if (result) {\r\n              appointment.appointmentId = appointment.id;\r\n              appointment.slotDate = moment(newSlot.date, \"YYYY-MM-DD\").format('DD/MM/YYYY');\r\n              appointment.slotTime = newSlot.slot;\r\n              this.appointmentService.rescheduleAppointment(appointment).subscribe((res: ApiResponseModel) => {\r\n                const message = res.message;\r\n                if (res.status) {\r\n                  this.mindmapService.notifyHwForRescheduleAppointment(appointment);\r\n                  this.getAppointments();\r\n                  this.toastr.success(this.translateService.instant(\"The appointment has been rescheduled successfully!\"), this.translateService.instant('Rescheduling successful!'));\r\n                } else {\r\n                  this.toastr.success(message, this.translateService.instant('Rescheduling failed!'));\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Cancel appointment\r\n  * @param {AppointmentModel} appointment - Appointment to be rescheduled\r\n  * @return {void}\r\n  */\r\n  cancel(appointment: AppointmentModel) {\r\n    if(appointment.visitStatus == 'Visit In Progress') {\r\n      this.toastr.error(this.translateService.instant(\"Visit is in progress, it can't be cancelled.\"), this.translateService.instant('Canceling failed!'));\r\n      return;\r\n    }\r\n    this.coreService.openConfirmCancelAppointmentModal(appointment).subscribe((res: boolean) => {\r\n      if (res) {\r\n        this.toastr.success(this.translateService.instant('The Appointment has been successfully canceled.'),this.translateService.instant('Canceling successful'));\r\n        this.getAppointments();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Get user uuid from localstorage user\r\n  * @return {string} - User uuid\r\n  */\r\n  get userId(): string {\r\n    return getCacheData(true, doctorDetails.USER).uuid;\r\n  }\r\n\r\n  /**\r\n  * Apply filter on a datasource\r\n  * @param {Event} event - Input's change event\r\n  * @return {void}\r\n  */\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    this.isFilterApplied = true;\r\n  }\r\n\r\n  /**\r\n  * Clear filter from a datasource\r\n  * @return {void}\r\n  */\r\n  clearFilter() {\r\n    this.dataSource.filter = null;\r\n    this.searchElement.nativeElement.value = \"\";\r\n    this.isFilterApplied = false;\r\n  }\r\n\r\n  /**\r\n   * Checks if the field is in patient registration fields\r\n   * @param {string} fieldName - The field name\r\n   * @return {boolean} - True if present, else false\r\n   */\r\n  checkPatientRegField(fieldName: string): boolean {\r\n    return this.patientRegFields.indexOf(fieldName) !== -1;\r\n  }\r\n\r\n  /**\r\n  * Returns the WhatsApp link for a given telephone number\r\n  * @param {string} telephoneNumber - The telephone number to generate the link for\r\n  * @return {string} - The WhatsApp link\r\n  */\r\n  getWhatsAppLink(telephoneNumber: string): string {\r\n    return this.visitService.getWhatsappLink(telephoneNumber);\r\n  }\r\n  \r\n  /**\r\n   * Retrieves the telephone number from the person's attributes\r\n   * @param {AppointmentModel['visit']['person']} person - The person object containing attributes\r\n   * @return {string | undefined} - The person's telephone number or undefined if not found\r\n   */\r\n  getTelephoneNumber(person: AppointmentModel['visit']['person']) {\r\n    return person?.person_attribute.find((v: { person_attribute_type_id: number; }) => v.person_attribute_type_id == 8)?.value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Closes the menu if it's open\r\n   */\r\n  closeMenu() {\r\n    if (this.menuTrigger) {\r\n      this.menuTrigger.closeMenu();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the mode for the component (either 'date' or 'range')\r\n   * @param {'date' | 'range'} mode - The mode to set\r\n   */\r\n  setMode(mode: 'date' | 'range') {\r\n    this.mode = mode;\r\n  }\r\n\r\n\r\n  /**\r\n   * Formats a date into 'YYYY-MM-DD' format\r\n   * @param {any} date - The date to format\r\n   * @return {string} - The formatted date\r\n   */\r\n  formatDate(date: any): string {\r\n    const localDate = new Date(date);\r\n    const year = localDate.getFullYear();\r\n    const month = String(localDate.getMonth() + 1).padStart(2, '0');\r\n    const day = String(localDate.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n\r\n  /**\r\n   * Converts a relative time string (e.g., \"2 hours\", \"1 day\") to a date string\r\n   * @param {string} relativeTime - The relative time string\r\n   * @return {string} - The resulting date in 'YYYY-MM-DD' format\r\n   * @throws {Error} - Throws error for invalid time units\r\n   */\r\n  convertToDate(relativeTime: string): string {\r\n    const now = new Date();\r\n    const [value, unit] = relativeTime.split(' ');\r\n    const amount = parseInt(value, 10);    \r\n    \r\n    if (['hour', 'hours'].includes(unit.toLowerCase())) now.setHours(now.getHours() - amount);\r\n    else if (['minute', 'minutes'].includes(unit.toLowerCase())) now.setMinutes(now.getMinutes() - amount);\r\n    else if (['day', 'days'].includes(unit.toLowerCase())) now.setDate(now.getDate() - amount);\r\n    else throw new Error('Invalid time unit. Only \"hours\", \"minutes\", or \"days\" are supported.');\r\n\r\n    return now.toISOString().split('T')[0];\r\n  }\r\n\r\n  /**\r\n   * Converts a follow-up date string to ISO format\r\n   * @param {string} followUp - The follow-up date string\r\n   * @return {string} - The follow-up date in ISO string format\r\n   */\r\n  convertToISO(followUp: string): string {\r\n    const date = new Date(followUp);\r\n    date.setDate(date.getDate());\r\n    return date.toISOString();\r\n  }\r\n  \r\n  /**\r\n   * Applies date or range filter to the data source based on selected date(s)\r\n   * @param {string} dateField - The field name for the date to filter\r\n   */\r\n  applyDateOrRangeFilter(dateField: string) {\r\n    const selectedDate = this.filteredDateAndRangeForm.get('date')?.value;\r\n    const startDate = this.filteredDateAndRangeForm.get('startDate')?.value;\r\n    const endDate = this.filteredDateAndRangeForm.get('endDate')?.value;\r\n  \r\n    if (selectedDate) {\r\n      const formattedDate = this.formatDate(selectedDate);\r\n\r\n      this.dataSource.filterPredicate = (data: any, filter: string) => {\r\n        let itemDate;\r\n        if(dateField === \"followUp\"){\r\n          itemDate = this.formatDate(this.convertToISO(data.followUp));\r\n        } else if(dateField === \"slotJsDate\"){\r\n          itemDate = this.formatDate(data[dateField]);\r\n        } else {\r\n          itemDate = data[dateField].includes(',') ? this.formatDate(data[dateField]) : this.convertToDate(data[dateField]);\r\n        }\r\n        return itemDate === filter;\r\n      };\r\n      this.dataSource.filter = formattedDate;\r\n    } else if (startDate && endDate) {\r\n      const formattedStartDate = this.formatDate(startDate);\r\n      const formattedEndDate = this.formatDate(endDate);\r\n  \r\n      this.dataSource.filterPredicate = (data: any, filter: string) => {\r\n        let itemDate;\r\n        if(dateField === \"followUp\"){\r\n          itemDate = this.formatDate(this.convertToISO(data.followUp));\r\n        } else if(dateField === \"slotJsDate\"){\r\n          itemDate = this.formatDate(data[dateField]);\r\n        } else {\r\n          itemDate = data[dateField].includes(',') ? this.formatDate(data[dateField]) : this.convertToDate(data[dateField]);\r\n        }\r\n        return itemDate >= formattedStartDate && itemDate <= formattedEndDate;\r\n      };\r\n\r\n      this.dataSource.filter = `${formattedStartDate}:${formattedEndDate}`;\r\n    } else {\r\n      this.dataSource.filter = '';\r\n    }\r\n    this.tempPaginator.firstPage();\r\n    this.closeMenu();\r\n  }\r\n\r\n  /**\r\n   * Resets the date filter form and clears the data source filter\r\n   * @param {boolean} flag - If true, doesn't close the menu\r\n   */\r\n  resetDate(flag: boolean = false) {\r\n    this.filteredDateAndRangeForm.reset();\r\n    this.dataSource.filter = '';\r\n    this.dataSource.filterPredicate = (data: any, filter: string) => true;\r\n    if (!flag) {\r\n      this.closeMenu();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Retrieves a specific attribute data from the person's attributes\r\n   * @param {any} data - The data object containing person attributes\r\n   * @param {string} attributeName - The name of the attribute to retrieve\r\n   * @return {Object | null} - The attribute name and value, or null if not found\r\n   */\r\n  getAttributeData(data: any, attributeName: string): { name: string; value: string } | null {\r\n    if (Array.isArray(data.person_attribute)) {\r\n      const attribute = data.person_attribute.find(\r\n        (attr: any) => attr.person_attribute_type?.name === attributeName\r\n      );\r\n      if (attribute) {\r\n        return {\r\n          name: attribute.person_attribute_type.name,\r\n          value: attribute.value\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n  * Get booked appointments for a logged-in doctor in a current year\r\n  * @return {void}\r\n  */\r\n  getAppointments() {\r\n    this.appointments = [];\r\n    let fromDate = moment().startOf('year').format('DD/MM/YYYY');\r\n    let toDate = moment().endOf('year').format('DD/MM/YYYY');\r\n    let pending_visits = this.pluginConfigObs.filter?.hasOwnProperty(\"pending_visits\")  ? this.pluginConfigObs.filter?.pending_visits : null;\r\n    if(this.pluginConfigObs?.filter){\r\n      fromDate = this.pluginConfigObs?.filter?.fromDate\r\n      toDate = this.pluginConfigObs?.filter?.toDate\r\n    }\r\n    this.appointmentService.getUserSlots(getCacheData(true, doctorDetails.USER).uuid, fromDate, toDate, this.isMCCUser ? this.specialization : null, pending_visits)\r\n      .subscribe((res: ApiResponseModel) => {        \r\n        this.visitsLengthCount = res.data?.length;\r\n        this.emitVisitsCount(this.visitsLengthCount);\r\n        let appointmentsdata = res.data;\r\n        appointmentsdata.forEach((appointment: AppointmentModel) => {\r\n          if (appointment.status == 'booked' && (appointment.visitStatus == 'Awaiting Consult'||appointment.visitStatus == 'Visit In Progress')) {\r\n            if (appointment.visit) {\r\n              appointment.cheif_complaint = this.getCheifComplaint(appointment.visit);\r\n              appointment.starts_in = checkIfDateOldThanOneDay(appointment.slotJsDate);\r\n              appointment.telephone = this.getTelephoneNumber(appointment?.visit?.person);\r\n              appointment.TMH_patient_id = this.getAttributeData(appointment.visit, \"TMH Case Number\")?.value;\r\n              appointment.uuid = appointment.visitUuid;\r\n              appointment.location = appointment?.visit?.location?.name;\r\n              appointment.age = appointment?.patientAge + ' ' + this.translateService.instant('y');\r\n              this.appointments.push(appointment);\r\n            }\r\n          }\r\n        });\r\n        this.dataSource.data = [...this.appointments];\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.filterPredicate = (data, filter: string) => data?.openMrsId.toLowerCase().indexOf(filter) != -1 || data?.patientName.toLowerCase().indexOf(filter) != -1;\r\n      });\r\n  }\r\n  \r\n  \r\n  /**\r\n  * Get doctor speciality\r\n  * @param {ProviderAttributeModel[]} attr - Array of provider attributes\r\n  * @return {string} - Doctor speciality\r\n  */\r\n  getSpecialization(attr: ProviderAttributeModel[]) {\r\n    let specialization = '';\r\n    attr.forEach((a: ProviderAttributeModel) => {\r\n      if (a.attributeType.uuid == 'ed1715f5-93e2-404e-b3c9-2a2d9600f062' && !a.voided) {\r\n        specialization = a.value;\r\n      }\r\n    });\r\n    return specialization;\r\n  }\r\n\r\n  /**\r\n  * Returns the age in years from the birthdate\r\n  * @param {string} birthdate - Date in string format\r\n  * @return {number} - Age\r\n  */\r\n  calculateAge(birthdate: string) {\r\n    return moment().diff(birthdate, 'years');\r\n  }\r\n\r\n  /**\r\n  * Returns the created time in words from the date\r\n  * @param {string} data - Date\r\n  * @return {string} - Created time in words from the date\r\n  */\r\n  getCreatedAt(data: string) {\r\n    let hours = moment().diff(moment(data), 'hours');\r\n    let minutes = moment().diff(moment(data), 'minutes');\r\n    if (hours > 24) {\r\n      return moment(data).format('DD MMM, YYYY');\r\n    };\r\n    if (hours < 1) {\r\n      return `${minutes} ${this.translateService.instant(\"Minutes ago\")}`;\r\n    }\r\n    return `${hours} ${this.translateService.instant(\"Hours ago\")}`;\r\n  }\r\n  \r\n  /**\r\n  * Get encounter datetime for a given encounter type\r\n  * @param {CustomVisitModel} visit - Visit\r\n  * @param {string} encounterName - Encounter type\r\n  * @return {string} - Encounter datetime\r\n  */\r\n  getEncounterCreated(visit: CustomVisitModel, encounterName: string) {\r\n    let created_at = '';\r\n    const encounters = visit.encounters;\r\n    encounters.forEach((encounter: CustomEncounterModel) => {\r\n      const display = encounter.type?.name;\r\n      if (display.match(encounterName) !== null) {\r\n        created_at = this.getCreatedAt(encounter.encounter_datetime.replace('Z','+0530'));\r\n      }\r\n    });\r\n    return created_at;\r\n  }\r\n\r\n  /**\r\n   * Determines if the encounter is a follow-up or new visit\r\n   * @param {any} enc - Encounter data\r\n   * @return {string} - 'FOLLOW_UP' or 'NEW'\r\n   */\r\n  getDemarcation(enc: any) {\r\n    let isFollowUp = false;\r\n    const adlIntl = enc?.find?.(e => e?.type?.name === visitTypes.ADULTINITIAL);\r\n    if (Array.isArray(adlIntl?.obs)) {\r\n      adlIntl?.obs.forEach(obs => {\r\n        if (!isFollowUp)\r\n          isFollowUp = obs?.value_text?.toLowerCase?.()?.includes?.(\"follow up\");\r\n      });\r\n    }\r\n    return isFollowUp ? visitTypes.FOLLOW_UP : visitTypes.NEW;\r\n  }\r\n\r\n  /**\r\n  * Get awaiting visits for a given page number\r\n  * @param {number} page - Page number\r\n  * @return {void}\r\n  */\r\n  getAwaitingVisits(page: number = 1) {\r\n    if(page == 1) {\r\n      this.awaitingVisits = [];\r\n    }    \r\n    this.visitService.getAwaitingVisits(this.specialization, page).subscribe((res: ApiResponseModel) => {\r\n      if (res.success) {\r\n        this.visitsLengthCount = res.totalCount;\r\n        this.emitVisitsCount(this.visitsLengthCount);\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          let visit = res.data[i];\r\n          visit.cheif_complaint = this.getCheifComplaint(visit);\r\n          visit.visit_created = visit?.date_created ? this.getCreatedAt(visit.date_created.replace('Z','+0530')) : this.getEncounterCreated(visit, visitTypes.ADULTINITIAL);\r\n          visit.person.age = this.calculateAge(visit.person.birthdate);\r\n          visit.patient_type = this.getDemarcation(visit?.encounters);\r\n          visit.location = visit?.location?.name;\r\n          visit.age = visit?.person?.age + ' ' + this.translateService.instant('y');\r\n          this.awaitingVisits.push(visit);\r\n        }\r\n        this.dataSource.data = [...this.awaitingVisits];\r\n        if (page == 1) {\r\n          this.dataSource.paginator = this.tempPaginator;\r\n          this.dataSource.filterPredicate = (data, filter: string) => data?.patient.identifier.toLowerCase().indexOf(filter) != -1 || data?.patient_name.given_name.concat((data?.patient_name.middle_name && this.checkPatientRegField('Middle Name') ? ' ' + data?.patient_name.middle_name : '') + ' ' + data?.patient_name.family_name).toLowerCase().indexOf(filter) != -1;\r\n        } else {\r\n          this.tempPaginator.length = this.awaitingVisits.length;\r\n          this.tempPaginator.nextPage();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Get inprogress visits for a given page number\r\n  * @param {number} page - Page number\r\n  * @return {void}\r\n  */\r\n  getInProgressVisits(page: number = 1) {\r\n    if(page == 1) {\r\n      this.inProgressVisits = [];\r\n    }\r\n    this.visitService.getInProgressVisits(this.specialization, page).subscribe((res: ApiResponseModel) => {\r\n      if (res.success) {\r\n        this.visitsLengthCount = res.totalCount;\r\n        this.emitVisitsCount(this.visitsLengthCount);\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          let visit = res.data[i];\r\n          visit.cheif_complaint = this.getCheifComplaint(visit);\r\n          visit.visit_created = visit?.date_created ? this.getCreatedAt(visit.date_created.replace('Z','+0530')) : this.getEncounterCreated(visit, visitTypes.ADULTINITIAL);\r\n          visit.prescription_started = this.getEncounterCreated(visit, visitTypes.VISIT_NOTE);\r\n          visit.person.age = this.calculateAge(visit.person.birthdate);\r\n          visit.TMH_patient_id = this.getAttributeData(visit, \"TMH Case Number\")?.value;\r\n          visit.location = visit?.location?.name;\r\n          visit.age = visit?.person?.age + ' ' + this.translateService.instant('y');\r\n          this.inProgressVisits.push(visit);\r\n        }\r\n        this.inProgressVisits.sort((a, b) => {\r\n            const parseTime = (value: string) => {\r\n                if (value.includes(\"minutes ago\")) {\r\n                    return { type: \"minutes\", time: parseInt(value) }; // Store only numeric minutes\r\n                }\r\n                if (value.includes(\"Hours ago\")) {\r\n                    return { type: \"hours\", time: parseInt(value) * 60 }; // Convert hours to minutes for correct comparison\r\n                }\r\n                return { type: \"date\", time: moment(value, \"DD MMM, YYYY\").valueOf() };\r\n            };\r\n\r\n            const visitA = parseTime(a.prescription_started);\r\n            const visitB = parseTime(b.prescription_started);\r\n            // Sort minutes first (ascending)\r\n            if (visitA.type === \"minutes\" && visitB.type === \"minutes\") {\r\n                return visitA.time - visitB.time;\r\n            }\r\n            // Sort hours first (ascending)\r\n            if (visitA.type === \"hours\" && visitB.type === \"hours\") {\r\n                return visitA.time - visitB.time;\r\n            }\r\n            // Sort dates (descending)\r\n            if (visitA.type === \"date\" && visitB.type === \"date\") {\r\n                return visitB.time - visitA.time;\r\n            }\r\n            // Prioritize minutes over hours, and hours over dates\r\n            if (visitA.type === \"minutes\") return -1;\r\n            if (visitB.type === \"minutes\") return 1;\r\n            if (visitA.type === \"hours\") return -1;\r\n            if (visitB.type === \"hours\") return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n        this.dataSource.data = [...this.inProgressVisits];\r\n        if (page == 1) {\r\n          this.dataSource.paginator = this.tempPaginator;\r\n          this.dataSource.filterPredicate = (data, filter: string) => data?.patient.identifier.toLowerCase().indexOf(filter) != -1 || data?.patient_name.given_name.concat((data?.patient_name.middle_name && this.checkPatientRegField('Middle Name') ? ' ' + data?.patient_name.middle_name : '') + ' ' + data?.patient_name.family_name).toLowerCase().indexOf(filter) != -1;\r\n        } else {\r\n          this.tempPaginator.length = this.inProgressVisits.length;\r\n          this.tempPaginator.nextPage();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Get priority visits for a given page number\r\n  * @param {number} page - Page number\r\n  * @return {void}\r\n  */\r\n  getPriorityVisits(page: number = 1) {\r\n    if(page == 1) {\r\n      this.priorityVisits = [];\r\n    }\r\n    this.visitService.getPriorityVisits(this.specialization, page).subscribe((res: ApiResponseModel) => {\r\n      if (res.success) {\r\n        this.visitsLengthCount = res.totalCount;\r\n        this.emitVisitsCount(this.visitsLengthCount);\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          let visit = res.data[i];\r\n          visit.cheif_complaint = this.getCheifComplaint(visit);\r\n          visit.visit_created = visit?.date_created ? this.getCreatedAt(visit.date_created.replace('Z','+0530')) : this.getEncounterCreated(visit, visitTypes.FLAGGED);\r\n          visit.person.age = this.calculateAge(visit.person.birthdate);\r\n          visit.location = visit?.location?.name;\r\n          visit.age = visit?.person?.age + ' ' + this.translateService.instant('y');\r\n          this.priorityVisits.push(visit);\r\n        }\r\n        this.dataSource.data = [...this.priorityVisits];\r\n        if (page == 1) {\r\n          this.dataSource.paginator = this.tempPaginator;\r\n          this.dataSource.filterPredicate = (data, filter: string) => data?.patient.identifier.toLowerCase().indexOf(filter) != -1 || data?.patient_name.given_name.concat((data?.patient_name.middle_name && this.checkPatientRegField('Middle Name') ? ' ' + data?.patient_name.middle_name : '') + ' ' + data?.patient_name.family_name).toLowerCase().indexOf(filter) != -1;\r\n        } else {\r\n          this.tempPaginator.length = this.priorityVisits.length;\r\n          this.tempPaginator.nextPage();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get completed visits count\r\n   * @return {void}\r\n   */\r\n  getCompletedVisits(page: number = 1) {\r\n    this.visitService.getEndedVisits(this.specialization, page).subscribe((res: ApiResponseModel) => {\r\n      if (res.success) {\r\n        this.visitsLengthCount = res.totalCount;\r\n        this.emitVisitsCount(this.visitsLengthCount);\r\n        for (let i = 0; i < res.data.length; i++) {\r\n          let visit = res.data[i];\r\n          visit.cheif_complaint = this.getCheifComplaint(visit);\r\n          visit.visit_created = visit?.date_created ? this.getCreatedAt(visit.date_created.replace('Z', '+0530')) : this.getEncounterCreated(visit, visitTypes.COMPLETED_VISIT);\r\n          visit.person.age = this.calculateAge(visit.person.birthdate);\r\n          visit.completed = visit?.date_created ? this.getCreatedAt(visit.date_created.replace('Z', '+0530')) : this.getEncounterCreated(visit, visitTypes.VISIT_COMPLETE);\r\n          visit.TMH_patient_id = this.getAttributeData(visit, \"TMH Case Number\")?.value;\r\n          visit.location = visit?.location?.name;\r\n          visit.age = visit?.person?.age + ' ' + this.translateService.instant('y');\r\n          this.completedVisits.push(visit);\r\n        }\r\n        this.dataSource.data = [...this.completedVisits];\r\n        if (page == 1) {\r\n          this.dataSource.paginator = this.tempPaginator;\r\n          this.dataSource.filterPredicate = (data: { patient: { identifier: string; }; patient_name: { given_name: string; middle_name: string; family_name: string; }; }, filter: string) => data?.patient.identifier.toLowerCase().indexOf(filter) != -1 || data?.patient_name.given_name.concat((data?.patient_name.middle_name && this.checkPatientRegField('Middle Name') ? ' ' + data?.patient_name.middle_name : '') + ' ' + data?.patient_name.family_name).toLowerCase().indexOf(filter) != -1;\r\n        } else {\r\n          this.tempPaginator.length = this.completedVisits.length;\r\n          this.tempPaginator.nextPage();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Get follow-up visits for a logged-in doctor\r\n  * @return {void}\r\n  */\r\n  getFollowUpVisit(page: number = 1) {\r\n    this.visitService.getFollowUpVisits(this.specialization).subscribe({\r\n      next: (res: ApiResponseModel) => {\r\n        if (res.success) {\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let visit = res.data[i];\r\n            if (visit?.encounters?.length) {\r\n              this.visitsLengthCount += 1;\r\n              visit.cheif_complaint = this.getCheifComplaint(visit);\r\n              visit.visit_created = visit?.date_created ? this.getCreatedAt(visit.date_created.replace('Z', '+0530')) : this.getEncounterCreated(visit, visitTypes.COMPLETED_VISIT);\r\n              visit.person.age = this.calculateAge(visit.person.birthdate);\r\n              visit.completed = this.getEncounterCreated(visit, visitTypes.VISIT_COMPLETE);\r\n              visit.followUp = this.processFollowUpDate(this.getEncounterObs(visit.encounters, visitTypes.VISIT_NOTE, 163345/*Follow-up*/)?.value_text);\r\n              visit.location = visit?.location?.name;\r\n              visit.age = visit?.person?.age + ' ' + this.translateService.instant('y');\r\n              this.followUpVisits.push(visit);\r\n            }\r\n          }\r\n          this.emitVisitsCount(this.visitsLengthCount);\r\n          this.dataSource.data = [...this.followUpVisits];\r\n          if (page == 1) {\r\n            this.dataSource.paginator = this.tempPaginator;\r\n            this.dataSource.filterPredicate = (data: { patient: { identifier: string; }; patient_name: { given_name: string; middle_name: string; family_name: string; }; }, filter: string) => data?.patient.identifier.toLowerCase().indexOf(filter) != -1 || data?.patient_name.given_name.concat((data?.patient_name.middle_name && this.checkPatientRegField('Middle Name') ? ' ' + data?.patient_name.middle_name : '') + ' ' + data?.patient_name.family_name).toLowerCase().indexOf(filter) != -1;\r\n          } else {\r\n            this.tempPaginator.length = this.followUpVisits.length;\r\n            this.tempPaginator.nextPage();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Get encounter datetime for a given encounter type\r\n  * @param {CustomVisitModel} visit - Visit\r\n  * @param {string} encounterName - Encounter type\r\n  * @return {string} - Encounter datetime\r\n  */\r\n  getEncounterObs(encounters: CustomEncounterModel[], encounterName: string, conceptId: number) {\r\n    let obs: CustomObsModel;\r\n    encounters.forEach((encounter: CustomEncounterModel) => {\r\n      if (encounter.type?.name === encounterName) {\r\n        obs = encounter?.obs?.find((o: CustomObsModel) => o.concept_id == conceptId);\r\n      }\r\n    });\r\n    return obs;\r\n  }\r\n  \r\n  /**\r\n   * Renders HTML content for a column, sanitized for security\r\n   * @param {any} column - Column definition\r\n   * @param {any} element - Data element to render\r\n   * @return {string} - Formatted HTML or element value\r\n   */\r\n  renderHtmlContent(column: any, element: any): string {\r\n    return typeof column.formatHtml === 'function' ? this.sanitizer.bypassSecurityTrustHtml(column.formatHtml(element)) : element[column.key];\r\n  }\r\n    \r\n  /**\r\n   * Returns a string of CSS classes for the column\r\n   * @param {any} column - Column definition\r\n   * @return {string} - Space-separated class names\r\n   */\r\n  getClasses(column: any, element: any): string {\r\n    let classList = [];\r\n\r\n    // If column has a static classList (array or string), add it\r\n    if (column.classList) {\r\n      classList = typeof column.classList === \"function\" ? column.classList(element) : column.classList;\r\n    }\r\n\r\n    return classList.join(\" \");\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Formats the follow-up date by cleaning up time details\r\n   * @param {string} value - Follow-up date string\r\n   * @return {string} - Formatted date\r\n   */\r\n  processFollowUpDate(value: string): string {\r\n    return value.split(',').length > 1 ? `${value.split(',')[0]}${value.split(',')[1].replace(\"Time:\", \"\")}` : value;\r\n  };\r\n\r\n  /**\r\n   * Executes the action based on its label (Reschedule or Cancel)\r\n   * @param {any} action - Action object\r\n   * @param {any} element - Element to perform the action on\r\n   */\r\n  handleAction(action: any, element: any) {\r\n    if (action.label === 'Reschedule') {\r\n      this.reschedule(element);\r\n    } else if (action.label === 'Cancel') {\r\n      this.cancel(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Opens a WhatsApp chat with the given phone number\r\n   * @param {MouseEvent} event - The click event to prevent row navigation\r\n   * @param {string} telephone - Phone number for WhatsApp\r\n   */\r\n  openWhatsApp(event: MouseEvent, telephone: string): void {\r\n    event.stopPropagation(); // Prevent row navigation\r\n    const whatsappLink = `https://wa.me/${telephone}`;\r\n    window.open(whatsappLink, '_blank', 'noopener,noreferrer');\r\n  }\r\n\r\n  /**\r\n   * Emits the visits count data with the given table tag name and count\r\n   * @param {number} visitsCount - The total visits count for the specific table\r\n   */\r\n  emitVisitsCount(visitsCount: number): void {\r\n    const visitsCountData = {\r\n      tableTagName: this.pluginConfigObs.pluginConfigObsFlag,\r\n      visitsCount: visitsCount\r\n    };\r\n    this.visitsCountDate.emit(visitsCountData);\r\n  }\r\n}\r\n\r\n","<mat-expansion-panel [expanded]=\"true\" data-test-id=\"matExpAppointment\">\r\n  <mat-expansion-panel-header data-test-id=\"matExpHeaderAppointment\">\r\n    <mat-panel-title>\r\n      <div id=\"{{pluginConfigObs.anchorId}}\" class=\"anchor-con\"></div>\r\n      <div class=\"intel-accordion-title\">\r\n        <img src=\"{{ pluginConfigObs.tableHeaderIcon }}\" alt=\"\" width=\"44px\">\r\n        <h6 class=\"mb-0 ml-2\">{{ pluginConfigObs.tableHeader | translate }} ({{ visitsLengthCount }})</h6>\r\n        <mat-icon aria-hidden=\"false\" aria-label=\"help icon\" matTooltip=\"{{ (pluginConfigObs.tooltipLabel | translate) }}\" matTooltipPosition=\"right\" data-test-id=\"matIcoHelpAppointment\">help_outline</mat-icon>\r\n        <div class=\"ml-auto filter-search-container\">\r\n          <button *ngIf=\"pluginConfigObs.filterObs.filterFlag\" class=\"mat-stroked-button\"[matMenuTriggerFor]=\"filterMenu1\" class=\"filter-btn\" (click)=\"$event.stopPropagation();\">\r\n            <img src=\"{{pluginConfigObs.filterObs.filterIcon}}\" alt=\"\"> {{( pluginConfigObs.filterObs.filterLabel| translate)}}\r\n          </button>\r\n          <mat-menu #filterMenu1=\"matMenu\" class=\"custom-menu\" [hasBackdrop]=\"true\" xPosition=\"before\">\r\n            <div class=\"toggle-buttons\">\r\n              <button class=\"mat-focus-indicator mat-button mat-button-base\" class=\"mat-focus-indicator mat-button mat-button-base\" mat-button [class.active]=\"mode === 'date'\" (click)=\"setMode('date'); $event.stopPropagation(); resetDate(true)\"><span class=\"mat-button-wrapper\"><span class=\"mat-button-wrapper\">{{'Date' | translate}}</span></span></button>\r\n              <button class=\"mat-focus-indicator mat-button mat-button-base\" class=\"mat-focus-indicator mat-button mat-button-base\" mat-button [class.active]=\"mode === 'range'\" (click)=\"setMode('range'); $event.stopPropagation(); resetDate(true)\"><span class=\"mat-button-wrapper\"><span class=\"mat-button-wrapper\">{{'Range' | translate}}</span></span></button>\r\n            </div>\r\n            <div *ngIf=\"mode === 'date'\" class=\"date-view\" (click)=\"$event.stopPropagation()\">\r\n              <form [formGroup]=\"filteredDateAndRangeForm\">\r\n                <div class=\"form-date\">\r\n                  <div class=\"input-date\">\r\n                    <label class=\"label-text\">{{ 'Select date' | translate}}</label>\r\n                    <div class=\"input-wrapper\">\r\n                      <input type=\"text\" class=\"form-control\" [max]=\"maxDate\" formControlName=\"date\" [matDatepicker]=\"dobdp\" placeholder=\"{{'Select date' | translate}}\" aria-label=\"Date\" aria-describedby=\"basic-addon1\" readonly data-test-id=\"etDate\"/>\r\n                      <mat-datepicker #dobdp></mat-datepicker>\r\n                      <mat-datepicker-toggle matSuffix [for]=\"dobdp\" data-test-id=\"dpDate\" class=\"datepicker-icon\">\r\n                        <img matDatepickerToggleIcon src=\"assets/svgs/calendar-date.svg\" alt=\"\">\r\n                      </mat-datepicker-toggle>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              </div>\r\n              <div *ngIf=\"mode === 'range'\" class=\"range-view\" (click)=\" $event.stopPropagation()\">\r\n                <form [formGroup]=\"filteredDateAndRangeForm\">\r\n                  <div class=\"form-date\">\r\n                    <div class=\"input-date\">\r\n                      <label class=\"label-text\">{{ 'Start date' | translate }}</label>\r\n                      <div class=\"input-wrapper\">\r\n                        <input type=\"text\" class=\"form-control\" [max]=\"maxDate\" formControlName=\"startDate\" [matDatepicker]=\"picker1\" placeholder=\"{{'Select start date'|translate}}\" aria-label=\"Start date\" aria-describedby=\"basic-addon1\" readonly data-test-id=\"etSelStartDate\">\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\" class=\"datepicker-icon\">\r\n                          <img matDatepickerToggleIcon src=\"assets/svgs/calendar-date.svg\" alt=\"\">\r\n                        </mat-datepicker-toggle>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-date\">\r\n                    <div class=\"input-date\">\r\n                      <label class=\"label-text\">{{ 'End date' | translate }}</label>\r\n                      <div class=\"input-wrapper\">\r\n                        <input type=\"text\" class=\"form-control\" [max]=\"maxDate\" formControlName=\"endDate\" [matDatepicker]=\"picker2\" placeholder=\"{{'Select end date'|translate}}\" aria-label=\"End date\" aria-describedby=\"basic-addon2\" readonly data-test-id=\"etSelEndDate\">\r\n                        <mat-datepicker #picker2></mat-datepicker>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker2\" class=\"datepicker-icon\">\r\n                          <img matDatepickerToggleIcon src=\"assets/svgs/calendar-date.svg\" alt=\"\">\r\n                        </mat-datepicker-toggle>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            <div class=\"action-buttons\">\r\n              <button mat-button class=\"mat-focus-indicator reset-btn mat-button mat-button-base\" (click)=\"resetDate();\"><span class=\"mat-button-wrapper\">{{ 'Reset'| translate }}</span></button>\r\n              <button mat-button class=\"mat-focus-indicator apply-btn mat-button mat-button-base\" (click)=\"applyDateOrRangeFilter(pluginConfigObs.filterObs.filterDateField)\"><span class=\"mat-button-wrapper\">{{ 'Apply'| translate }}</span></button>\r\n            </div>\r\n          </mat-menu>\r\n          <div class=\"input-group search-bar ml-auto\" (click)=\"$event.stopPropagation();\">\r\n            <input type=\"text\" #searchInput class=\"form-control\" placeholder=\"{{ pluginConfigObs.searchPlaceHolder | translate }}\" aria-label=\"search1\" aria-describedby=\"basic-addon1\" (keyup)=\"applyFilter($event)\" (keydown.Space)=\"$event.stopPropagation()\" (keydown.Enter)=\"$event.stopPropagation()\" data-test-id=\"etSearchAppointmentDashboard\">\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\" id=\"basic-addon1\"  *ngIf=\"!isFilterApplied\">\r\n                <img src=\"assets/svgs/search-icon.svg\" alt=\"\" width=\"20px\" height=\"20px\">\r\n              </span>\r\n              <button data-test-id=\"btnResetApSerach\"  class=\"btnResetApSerach\" class=\"btnResetApSerach\" class=\"mat-icon-button\" aria-label=\"Reset appointment search\"  (click)=\"clearFilter()\"  *ngIf=\"isFilterApplied\">\r\n                <mat-icon class=\"ml-0\" style=\"line-height: normal;\">close</mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-panel-title>\r\n  </mat-expansion-panel-header>\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n      <ng-container *ngFor=\"let column of displayedAppointmentColumns\" [matColumnDef]=\"column.key\">\r\n        <th mat-header-cell *matHeaderCellDef>{{ column.label | translate }}</th>\r\n\r\n        <td mat-cell *matCellDef=\"let element; let j = index;\" [attr.data-test-id]=\"'td' + j\">\r\n          <ng-container *ngIf=\"column.key !== 'patient_name'\">\r\n            <div class=\"float-left\" \r\n                [innerHTML]=\"renderHtmlContent(column, element)\" \r\n                [ngClass]=\"getClasses(column, element)\">\r\n            </div>\r\n          </ng-container>\r\n\r\n          <!-- Patient Name Column -->\r\n          <ng-container *ngIf=\"column.key === 'patient_name'\">\r\n            <div class=\"d-flex align-items-center\">\r\n              <img *ngIf=\"element.patientId\" src=\"{{ checkPatientRegField('Profile Photo') ? baseURL + '/personimage/' + element.patientId : '' }}\" alt=\"\" width=\"32px\" height=\"32px\" style=\"border-radius: 50%;\">\r\n              <img *ngIf=\"pluginConfigObs.pluginConfigObsFlag !== 'Appointment'\" src=\"{{ checkPatientRegField('Profile Photo') ? baseURL + '/personimage/' + element.person.uuid : '' }}\" alt=\"\" width=\"32px\" height=\"32px\" style=\"border-radius: 50%;\">\r\n              <div class=\"float-left\" \r\n                [innerHTML]=\"renderHtmlContent(column, element)\" \r\n                [ngClass]=\"getClasses(column, element)\">\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n\r\n          <!-- Telephone Column -->\r\n          <ng-container *ngIf=\"column.key === 'telephone' && element.telephone\">\r\n            <a (click)=\"openWhatsApp($event, element.telephone)\" class=\"float-left icon-btn m-0\" [attr.data-test-id]=\"'linkPatientWhatsApp' + j\">\r\n              <img src=\"assets/svgs/whatsapp-green.svg\" alt=\"WhatsApp\" />\r\n            </a>\r\n          </ng-container>\r\n\r\n          <!-- Actions Column -->\r\n          <ng-container *ngIf=\"column.key === 'actions'\">\r\n            <div class=\"actions-btn-wrap d-flex align-items-center\">\r\n              <button\r\n                *ngFor=\"let action of column.actionButtons\"\r\n                [ngStyle]=\"{\r\n                  color: action.style?.color,\r\n                  backgroundColor: action.style?.backgroundColor\r\n                }\"\r\n                class=\"action-btn mr-2\"\r\n                type=\"button\"\r\n                (click)=\"$event.stopPropagation(); handleAction(action, element)\"\r\n              >\r\n                {{ action.label | translate }}\r\n              </button>\r\n            </div>\r\n          </ng-container>\r\n        </td>\r\n      </ng-container>\r\n    \r\n\r\n      <!-- No Data Row -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumns.length\">\r\n          {{ pluginConfigObs.noRecordFound | translate }}\r\n        </td>\r\n      </tr>\r\n\r\n      <!-- Row Definitions -->\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; let x = index; columns: displayedColumns;\" [attr.data-test-id]=\"'tr' + x\" [routerLink]=\"['/dashboard/visit-summary', row.uuid]\"></tr>\r\n      \r\n    </table>\r\n    <mat-paginator #tempPaginator hidePageSize [pageSizeOptions]=\"pageSizeOptions\" aria-label=\"Select page of periodic elements\"></mat-paginator>\r\n  </div>\r\n</mat-expansion-panel>\r\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'lib-ih-library',\r\n  templateUrl: './ih-library.component.html',\r\n})\r\nexport class IhLibraryComponent implements OnInit {\r\n\r\n  constructor(public translate: TranslateService) {\r\n    translate.addLangs(['en', 'ru']);\r\n    translate.setDefaultLang('en');\r\n\r\n    const browserLang = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","<lib-table-grid></lib-table-grid>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { RescheduleAppointmentComponent } from './reschedule-appointment/reschedule-appointment.component';\r\nimport { RescheduleAppointmentConfirmComponent } from './reschedule-appointment-confirm/reschedule-appointment-confirm.component';\r\nimport { CancelAppointmentConfirmComponent } from './cancel-appointment-confirm/cancel-appointment-confirm.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        RescheduleAppointmentComponent,\r\n        RescheduleAppointmentConfirmComponent,\r\n        CancelAppointmentConfirmComponent,\r\n    ],\r\n    imports: [\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        CommonModule,\r\n        MatDialogModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatListModule,\r\n        MatDatepickerModule,\r\n        NgSelectModule,\r\n        MatProgressBarModule,\r\n        MatTabsModule,\r\n        MatTableModule,\r\n        TranslateModule\r\n    ],\r\n    schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ModalComponentsModule { }\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { IhLibraryComponent } from './ih-library.component';\r\nimport { TableGridComponent } from './components/table-grid/table-grid.component';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport localeRu from '@angular/common/locales/ru';\r\nimport localeEn from '@angular/common/locales/en';\r\nimport { ToastrModule } from \"ngx-toastr\";\r\nimport { NgxPermissionsModule } from \"ngx-permissions\";\r\nimport { ModalComponentsModule } from \"./modal-components/modal-components.module\";\r\nimport { DefaultImageDirective } from './core/directives/default-image.directive';\r\n\r\n// Material Design Imports\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { CdkAccordionModule } from \"@angular/cdk/accordion\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nexport function HttpLoaderFactory(httpClient: HttpClient) {\r\n  return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\r\n}\r\n\r\nregisterLocaleData(localeRu);\r\nregisterLocaleData(localeEn);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IhLibraryComponent,\r\n    TableGridComponent,\r\n    DefaultImageDirective\r\n  ],\r\n  imports: [\r\n    ModalComponentsModule,\r\n    RouterModule,\r\n    CommonModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right',\r\n      preventDuplicates: true,\r\n      closeButton: true,\r\n      tapToDismiss: false\r\n    }),\r\n    NgxPermissionsModule.forRoot({\r\n      permissionsIsolate: false,\r\n      rolesIsolate: false,\r\n      configurationIsolate: false\r\n    }),\r\n    MatPaginatorModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatExpansionModule,\r\n    MatBottomSheetModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    CdkAccordionModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    DefaultImageDirective,\r\n    IhLibraryComponent,\r\n    TableGridComponent,\r\n    MatPaginatorModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatExpansionModule,\r\n    MatBottomSheetModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatTabsModule,\r\n    CdkAccordionModule,\r\n    MatDialogModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPermissionsModule,\r\n    ToastrModule,\r\n    TranslateModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_DIALOG_DATA, useValue: {} },\r\n    { provide: MatDialogRef, useValue: {} },\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    NO_ERRORS_SCHEMA\r\n  ]\r\n})\r\nexport class IhLibraryModule { }\r\n","/*\r\n * Public API Surface of ih-library\r\n */\r\n\r\nexport * from './lib/ih-library.service';\r\nexport * from './lib/ih-library.component';\r\nexport * from './lib/ih-library.module';\r\n\r\nexport * from './lib/components/table-grid/table-grid.component';\r\nexport * from './lib/core/directives/default-image.directive';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3","PICK_FORMATS","i2.AppointmentService","i5","i6","i7","i14","i19","i21.DefaultImageDirective","i2.TableGridComponent"],"mappings":"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"}