import { formatDate } from '@angular/common';
import { Component, Inject } from '@angular/core';
import { DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter } from '@angular/material/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { TranslateService } from '@ngx-translate/core';
// import * as moment from 'moment';
import moment from 'moment';
import { ToastrService } from 'ngx-toastr';
import { AppointmentService } from '../../services/appointment.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "../../services/appointment.service";
import * as i3 from "ngx-toastr";
import * as i4 from "@ngx-translate/core";
import * as i5 from "@angular/material/form-field";
import * as i6 from "@angular/common";
import * as i7 from "@angular/forms";
import * as i8 from "@angular/material/datepicker";
export const PICK_FORMATS = {
    parse: { dateInput: { month: 'short', year: 'numeric', day: 'numeric' } },
    display: {
        dateInput: 'input',
        monthYearLabel: { year: 'numeric', month: 'short' },
        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
        monthYearA11yLabel: { year: 'numeric', month: 'long' }
    }
};
class PickDateAdapter extends NativeDateAdapter {
    format(date, displayFormat) {
        if (displayFormat === 'input') {
            return formatDate(date, 'dd MMMM yyyy', this.locale);
        }
        else {
            return date.toDateString();
        }
    }
}
export class RescheduleAppointmentComponent {
    data;
    dialogRef;
    appointmentService;
    toastr;
    translate;
    minDate;
    scheduleData = {
        morning: [],
        afternoon: [],
        evening: []
    };
    selectedDate = moment().format("YYYY-MM-DD");
    slots = [];
    selectedSlot;
    constructor(data, dialogRef, appointmentService, toastr, translate) {
        this.data = data;
        this.dialogRef = dialogRef;
        this.appointmentService = appointmentService;
        this.toastr = toastr;
        this.translate = translate;
        this.minDate = new Date();
    }
    ngOnInit() {
        this.getAppointmentSlots();
    }
    /**
    * Callback for date change event
    * @param {Event} event - Date changed event
    * @return {void}
    */
    dateChanged(event) {
        this.selectedSlot = null;
        this.selectedDate = moment(event.target.value).format("YYYY-MM-DD");
        this.getAppointmentSlots();
    }
    /**
    * Get appointment slots for a given speciality, from and to date
    * @param {string} fromDate - From date
    * @param {string} toDate - To date
    * @param {string} speciality - Speciality
    * @return {void}
    */
    getAppointmentSlots(fromDate = this.selectedDate, toDate = this.selectedDate, speciality = this.data?.speciality) {
        this.scheduleData = {
            morning: [],
            afternoon: [],
            evening: []
        };
        this.appointmentService.getAppointmentSlots(moment(fromDate).format("DD/MM/YYYY"), moment(toDate).format("DD/MM/YYYY"), speciality).subscribe((res) => {
            this.slots = res.dates;
            this.slots.forEach((slot) => {
                if (moment(slot.slotTime, "LT").isBefore(moment("12:00 PM", "LT"))) {
                    this.scheduleData.morning.push(slot.slotTime);
                }
                else if (moment(slot.slotTime, "LT").isBetween(moment("11:30 AM", "LT"), moment("5:00 PM", "LT"))) {
                    this.scheduleData.afternoon.push(slot.slotTime);
                }
                else {
                    this.scheduleData.evening.push(slot.slotTime);
                }
            });
        });
    }
    /**
    * Reschedule appointment
    * @return {void}
    */
    reschedule() {
        if (this.selectedDate && this.selectedSlot) {
            this.close({ date: this.selectedDate, slot: this.selectedSlot });
        }
        else {
            this.toastr.warning(this.translate.instant("Please select slot to reschedule."), this.translate.instant("Select Slot"));
        }
    }
    /**
    * Close modal
    * @param {boolean|RescheduleAppointmentModalResponseModel} val - Dialog result
    * @return {void}
    */
    close(val) {
        this.dialogRef.close(val);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: RescheduleAppointmentComponent, deps: [{ token: MAT_DIALOG_DATA }, { token: i1.MatDialogRef }, { token: i2.AppointmentService }, { token: i3.ToastrService }, { token: i4.TranslateService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: RescheduleAppointmentComponent, selector: "app-reschedule-appointment", providers: [
            { provide: DateAdapter, useClass: PickDateAdapter },
            { provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS }
        ], ngImport: i0, template: "<div class=\"reschedule-modal\">\n  <div class=\"modal-title\">\n    <h6 class=\"mb-0\">{{ 'Reschedule appointment' | translate }}</h6>\n    <button class=\"modal-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/Close.svg\" alt=\"\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 p-0\">\n          <div class=\"select-date-con\">\n            <div class=\"form-group row\">\n              <label for=\"expiryDate\" class=\"col-sm-3 col-form-label\">{{ 'Select Date' | translate }}</label>\n              <div class=\"col-sm-6\">\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedDate\" (dateChange)=\"dateChanged($event)\" [min]=\"minDate\" [matDatepicker]=\"dp1\" placeholder=\"{{'Select date'|translate}}\" aria-label=\"Date\"\n                    aria-describedby=\"basic-addon1\" readonly data-test-id=\"etDate\">\n                  <mat-datepicker #dp1></mat-datepicker>\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      <mat-datepicker-toggle matSuffix [for]=\"dp1\" data-test-id=\"dpDate\">\n                        <img matDatepickerToggleIcon src=\"assets/svgs/calendar-date.svg\" alt=\"\">\n                      </mat-datepicker-toggle>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"slots-con\">\n            <h6>{{ 'Select a timeslot' | translate }}</h6>\n            <div class=\"slot-section\" *ngIf=\"scheduleData.morning.length;\">\n              <h6>\n                <img src=\"assets/svgs/sunrise.svg\" alt=\"\" class=\"mr-2\" />\n                {{ 'Morning' | translate }}\n              </h6>\n              <div class=\"slot-chips\">\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.morning;\" (click)=\"selectedSlot = s\">\n                  {{s}}\n                </div>\n              </div>\n            </div>\n            <div class=\"slot-section\" *ngIf=\"scheduleData.afternoon.length;\">\n              <h6>\n                <img src=\"assets/svgs/sun.svg\" alt=\"\" class=\"mr-2\" />\n                {{ 'Afternoon' | translate }}\n              </h6>\n              <div class=\"slot-chips\">\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.afternoon;\" (click)=\"selectedSlot = s\">\n                  {{s}}\n                </div>\n              </div>\n            </div>\n            <div class=\"slot-section\" *ngIf=\"scheduleData.evening.length;\">\n              <h6>\n                <img src=\"assets/svgs/sunset.svg\" alt=\"\" class=\"mr-2\" />\n                {{ 'Evening' | translate }}\n              </h6>\n              <div class=\"slot-chips\">\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.evening;\" (click)=\"selectedSlot = s\">\n                  {{s}}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center py-2\">\n            <button class=\"confirm-btn\" type=\"button\" (click)=\"reschedule()\" data-test-id=\"btnSubmit\">{{ 'Reschedule' | translate }}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", styles: [".reschedule-modal{font-family:DM Sans}.reschedule-modal .modal-title{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:24px;width:100%;height:70px;background:var(--color-lightGray)}.reschedule-modal .modal-title h6{font-weight:700;font-size:20px;color:var(--color-darkestBlue)}.reschedule-modal .modal-title .modal-close-btn{border:none;background:transparent}.reschedule-modal .modal-body{padding:24px}.reschedule-modal .modal-body .select-date-con{border-bottom:1px solid rgba(178,175,190,.2);margin:10px 0}.reschedule-modal .modal-body .slots-con{max-height:55vh;overflow:auto}.reschedule-modal .modal-body .slots-con h6{font-weight:700;font-size:16px;color:var(--color-darkestBlue);display:flex;align-items:center}.reschedule-modal .modal-body .slots-con .slot-section{padding:10px 0}.reschedule-modal .modal-body .slots-con .slot-section .slot-chips{display:flex;flex-wrap:wrap;align-items:center}.reschedule-modal .modal-body .slots-con .slot-section .slot-chips .slot-chip-item{padding:8px;background:var(--color-lightGray);border:1px solid rgba(178,175,190,.2);border-radius:6px;font-size:14px;line-height:150%;color:var(--color-darkestBlue);margin-right:5px;margin-bottom:5px;cursor:pointer}.reschedule-modal .modal-body .slots-con .slot-section .slot-chips .slot-chip-item.selected{background:var(--color-darkBlue);border:none;border-radius:6px;color:var(--color-white)}.cancel-btn{padding:8px 24px;min-width:119px;height:48px;background:var(--color-white);border:1px solid var(--color-lightGray);border-radius:8px;font-size:18px;line-height:150%;color:var(--color-darkBlue);font-weight:700}.confirm-btn{padding:8px 24px;min-width:119px;height:48px;background:var(--color-darkBlue);border:1px solid var(--color-darkBlue);border-radius:8px;font-size:18px;line-height:150%;color:var(--color-white);font-weight:700}.form-group label{font-size:14px;color:var(--color-darkestBlue);font-weight:700}.form-group .input-group{border:1px solid rgba(178,175,190,.2);background:var(--color-offWhite);border-radius:8px;height:48px}.form-group .input-group .form-control{padding:14px 16px;height:48px;font-size:16px;color:var(--color-darkestBlue);border:none;background:transparent}.form-group .input-group .form-control:focus{box-shadow:none}.form-group .input-group .input-group-append .input-group-text{background:transparent;border:none;padding:0}\n"], dependencies: [{ kind: "directive", type: i5.MatSuffix, selector: "[matSuffix]" }, { kind: "directive", type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i7.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i7.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i7.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i8.MatDatepicker, selector: "mat-datepicker", exportAs: ["matDatepicker"] }, { kind: "directive", type: i8.MatDatepickerInput, selector: "input[matDatepicker]", inputs: ["matDatepicker", "min", "max", "matDatepickerFilter"], exportAs: ["matDatepickerInput"] }, { kind: "component", type: i8.MatDatepickerToggle, selector: "mat-datepicker-toggle", inputs: ["tabIndex", "disabled", "for", "aria-label", "disableRipple"], exportAs: ["matDatepickerToggle"] }, { kind: "directive", type: i8.MatDatepickerToggleIcon, selector: "[matDatepickerToggleIcon]" }, { kind: "pipe", type: i4.TranslatePipe, name: "translate" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: RescheduleAppointmentComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-reschedule-appointment', providers: [
                        { provide: DateAdapter, useClass: PickDateAdapter },
                        { provide: MAT_DATE_FORMATS, useValue: PICK_FORMATS }
                    ], template: "<div class=\"reschedule-modal\">\n  <div class=\"modal-title\">\n    <h6 class=\"mb-0\">{{ 'Reschedule appointment' | translate }}</h6>\n    <button class=\"modal-close-btn\" (click)=\"close(false)\" data-test-id=\"btnClose\"><img src=\"assets/svgs/Close.svg\" alt=\"\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12 p-0\">\n          <div class=\"select-date-con\">\n            <div class=\"form-group row\">\n              <label for=\"expiryDate\" class=\"col-sm-3 col-form-label\">{{ 'Select Date' | translate }}</label>\n              <div class=\"col-sm-6\">\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedDate\" (dateChange)=\"dateChanged($event)\" [min]=\"minDate\" [matDatepicker]=\"dp1\" placeholder=\"{{'Select date'|translate}}\" aria-label=\"Date\"\n                    aria-describedby=\"basic-addon1\" readonly data-test-id=\"etDate\">\n                  <mat-datepicker #dp1></mat-datepicker>\n                  <div class=\"input-group-append\">\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\n                      <mat-datepicker-toggle matSuffix [for]=\"dp1\" data-test-id=\"dpDate\">\n                        <img matDatepickerToggleIcon src=\"assets/svgs/calendar-date.svg\" alt=\"\">\n                      </mat-datepicker-toggle>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"slots-con\">\n            <h6>{{ 'Select a timeslot' | translate }}</h6>\n            <div class=\"slot-section\" *ngIf=\"scheduleData.morning.length;\">\n              <h6>\n                <img src=\"assets/svgs/sunrise.svg\" alt=\"\" class=\"mr-2\" />\n                {{ 'Morning' | translate }}\n              </h6>\n              <div class=\"slot-chips\">\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.morning;\" (click)=\"selectedSlot = s\">\n                  {{s}}\n                </div>\n              </div>\n            </div>\n            <div class=\"slot-section\" *ngIf=\"scheduleData.afternoon.length;\">\n              <h6>\n                <img src=\"assets/svgs/sun.svg\" alt=\"\" class=\"mr-2\" />\n                {{ 'Afternoon' | translate }}\n              </h6>\n              <div class=\"slot-chips\">\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.afternoon;\" (click)=\"selectedSlot = s\">\n                  {{s}}\n                </div>\n              </div>\n            </div>\n            <div class=\"slot-section\" *ngIf=\"scheduleData.evening.length;\">\n              <h6>\n                <img src=\"assets/svgs/sunset.svg\" alt=\"\" class=\"mr-2\" />\n                {{ 'Evening' | translate }}\n              </h6>\n              <div class=\"slot-chips\">\n                <div class=\"slot-chip-item\" [class.selected]=\"selectedSlot == s\" *ngFor=\"let s of scheduleData.evening;\" (click)=\"selectedSlot = s\">\n                  {{s}}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center py-2\">\n            <button class=\"confirm-btn\" type=\"button\" (click)=\"reschedule()\" data-test-id=\"btnSubmit\">{{ 'Reschedule' | translate }}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", styles: [".reschedule-modal{font-family:DM Sans}.reschedule-modal .modal-title{display:flex;flex-direction:row;align-items:center;justify-content:space-between;padding:24px;width:100%;height:70px;background:var(--color-lightGray)}.reschedule-modal .modal-title h6{font-weight:700;font-size:20px;color:var(--color-darkestBlue)}.reschedule-modal .modal-title .modal-close-btn{border:none;background:transparent}.reschedule-modal .modal-body{padding:24px}.reschedule-modal .modal-body .select-date-con{border-bottom:1px solid rgba(178,175,190,.2);margin:10px 0}.reschedule-modal .modal-body .slots-con{max-height:55vh;overflow:auto}.reschedule-modal .modal-body .slots-con h6{font-weight:700;font-size:16px;color:var(--color-darkestBlue);display:flex;align-items:center}.reschedule-modal .modal-body .slots-con .slot-section{padding:10px 0}.reschedule-modal .modal-body .slots-con .slot-section .slot-chips{display:flex;flex-wrap:wrap;align-items:center}.reschedule-modal .modal-body .slots-con .slot-section .slot-chips .slot-chip-item{padding:8px;background:var(--color-lightGray);border:1px solid rgba(178,175,190,.2);border-radius:6px;font-size:14px;line-height:150%;color:var(--color-darkestBlue);margin-right:5px;margin-bottom:5px;cursor:pointer}.reschedule-modal .modal-body .slots-con .slot-section .slot-chips .slot-chip-item.selected{background:var(--color-darkBlue);border:none;border-radius:6px;color:var(--color-white)}.cancel-btn{padding:8px 24px;min-width:119px;height:48px;background:var(--color-white);border:1px solid var(--color-lightGray);border-radius:8px;font-size:18px;line-height:150%;color:var(--color-darkBlue);font-weight:700}.confirm-btn{padding:8px 24px;min-width:119px;height:48px;background:var(--color-darkBlue);border:1px solid var(--color-darkBlue);border-radius:8px;font-size:18px;line-height:150%;color:var(--color-white);font-weight:700}.form-group label{font-size:14px;color:var(--color-darkestBlue);font-weight:700}.form-group .input-group{border:1px solid rgba(178,175,190,.2);background:var(--color-offWhite);border-radius:8px;height:48px}.form-group .input-group .form-control{padding:14px 16px;height:48px;font-size:16px;color:var(--color-darkestBlue);border:none;background:transparent}.form-group .input-group .form-control:focus{box-shadow:none}.form-group .input-group .input-group-append .input-group-text{background:transparent;border:none;padding:0}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }, { type: i1.MatDialogRef }, { type: i2.AppointmentService }, { type: i3.ToastrService }, { type: i4.TranslateService }]; } });
//# sourceMappingURL=data:application/json;base64,